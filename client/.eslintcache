[{"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\index.js":"1","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\reportWebVitals.js":"2","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\App.js":"3","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\ThemeContexts.js":"4","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Home\\Home.js":"5","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\ProductInfo\\ProductInfo.js":"6","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\About\\About.js":"7","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Admin\\Admin.js":"8","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Header\\Header.js":"9","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Products\\Products.js":"10","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CategorySelect\\CategorySelect.js":"11","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SaleCountdown\\SaleCountdown.js":"12","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeThemeColors\\ChangeThemeColors.js":"13","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SliderFilterPrice\\SliderFilterPrice.js":"14","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SearchKeyword\\SearchKeyword.js":"15","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ProductDisplayClass\\ProductDisplayClass.js":"16","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ListCategories\\ListCategories.js":"17","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\UserContexts.js":"18","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\DisplayUser\\DisplayUser.js":"19","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeUser\\ChangeUser.js":"20","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CategorySelectAdmin\\CategorySelectAdmin.js":"21","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\storagetools\\LocalStorageArrayTools.js":"22","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\SaleContexts.js":"23","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CartIcon\\CartIcon.js":"24"},{"size":517,"mtime":1615478320063,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1615478320086,"results":"27","hashOfConfig":"26"},{"size":3791,"mtime":1617706506585,"results":"28","hashOfConfig":"26"},{"size":490,"mtime":1617688289519,"results":"29","hashOfConfig":"26"},{"size":2472,"mtime":1617277679097,"results":"30","hashOfConfig":"26"},{"size":15514,"mtime":1617728658693,"results":"31","hashOfConfig":"26"},{"size":293,"mtime":1615478320070,"results":"32","hashOfConfig":"26"},{"size":8144,"mtime":1617706539369,"results":"33","hashOfConfig":"26"},{"size":2630,"mtime":1617725227895,"results":"34","hashOfConfig":"26"},{"size":2314,"mtime":1617331162940,"results":"35","hashOfConfig":"26"},{"size":2077,"mtime":1617329803211,"results":"36","hashOfConfig":"26"},{"size":3658,"mtime":1615736895401,"results":"37","hashOfConfig":"26"},{"size":516,"mtime":1616570489303,"results":"38","hashOfConfig":"26"},{"size":1836,"mtime":1617690240139,"results":"39","hashOfConfig":"26"},{"size":1909,"mtime":1615736895401,"results":"40","hashOfConfig":"26"},{"size":3238,"mtime":1617712703230,"results":"41","hashOfConfig":"26"},{"size":1884,"mtime":1616570571661,"results":"42","hashOfConfig":"26"},{"size":339,"mtime":1615668286879,"results":"43","hashOfConfig":"26"},{"size":551,"mtime":1616538023272,"results":"44","hashOfConfig":"26"},{"size":641,"mtime":1616570475140,"results":"45","hashOfConfig":"26"},{"size":1763,"mtime":1615738668586,"results":"46","hashOfConfig":"26"},{"size":1112,"mtime":1615835500104,"results":"47","hashOfConfig":"26"},{"size":688,"mtime":1616579112900,"results":"48","hashOfConfig":"26"},{"size":645,"mtime":1617726997802,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"2lzu8r",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\index.js",[],["106","107"],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\reportWebVitals.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\App.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\ThemeContexts.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Home\\Home.js",["108","109","110","111"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport DisplayUser from \"../../components/DisplayUser/DisplayUser\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport SaleContext, { sales } from \"../../contexts/SaleContexts\";\r\n\r\n//components of content:\r\nimport Header from \"../../components/Header/Header\";\r\nimport Products from \"../../components/Products/Products\";\r\n\r\nconst Home = () => {\r\n  const [secondsLeft, setSecondsLeft] = useState(65);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [isSale, setSale] = useState(\"true\");\r\n  const [priceRange, setPriceRange] = useState([0, 200]);\r\n  const [searchKeyword, setSearch] = useState(\"\");\r\n  const [numProducts, setNumProds] = useState(\"\");\r\n  const { user, toggleUser } = useContext(UserContext);\r\n\r\n  // fetching from my server on localhost at 192.168.43.81 on port 8000:\r\n  /*useEffect(() => {\r\n    fetch(\"http://192.168.43.81:8000/products.json\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n      });\r\n    console.log(\"fetched \");\r\n  }, []);\r\n  */\r\n  /* mongoose:\r\n fetch(\"http://10.0.0.193:8000/products\")\r\n */\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/products\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n      });\r\n    console.log(\"fetched products in Home\");\r\n    setNumProds(products.length);\r\n  }, [products.length]);\r\n\r\n  return (\r\n    <div>\r\n      <div>Num products in shop: {numProducts}</div>\r\n      {user.name === \"Admin\" && <div>Click on product to edit it</div>}\r\n      {user.name !== \"Admin\" && (\r\n        <div>Click on product to see details and order</div>\r\n      )}\r\n      <Header\r\n        selectedCategory={selectedCategory}\r\n        setSelectedCategory={setSelectedCategory}\r\n        secondsLeft={secondsLeft}\r\n        setSecondsLeft={setSecondsLeft}\r\n        products={products}\r\n        setProducts={setProducts}\r\n        isSale={isSale}\r\n        setSale={setSale}\r\n        priceRange={priceRange}\r\n        setPriceRange={setPriceRange}\r\n        searchKeyword={searchKeyword}\r\n        setSearch={setSearch}\r\n      ></Header>\r\n      <Products\r\n        secondsLeft={secondsLeft}\r\n        selectedCategory={selectedCategory}\r\n        products={products}\r\n        isSale={isSale}\r\n        priceRange={priceRange}\r\n      ></Products>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n/*\r\n */\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\ProductInfo\\ProductInfo.js",["112","113","114","115","116","117","118"],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\About\\About.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Admin\\Admin.js",["119","120","121","122","123","124","125","126","127","128"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./Admin.css\";\r\n\r\n//components of content:\r\nimport Header from \"../../components/Header/Header\";\r\nimport Products from \"../../components/Products/Products\";\r\n//import SearchKeyword from \"../SearchKeyword/SearchKeyword\";\r\nimport CategorySelectAdmin from \"../../components/CategorySelectAdmin/CategorySelectAdmin\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\nimport SaleContext, { sales } from \"../../contexts/SaleContexts\";\r\n\r\n/*****\r\n * NEED TO ADD NEW FIELDS TO FORM\r\n * *******\r\n */\r\n\r\nconst Admin = () => {\r\n  const [color] = useState(\"red\");\r\n  const [secondsLeft, setSecondsLeft] = useState(65);\r\n  const [salesProductsIds] = useState([1, 3, 5, 6]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [onSale, setSale] = useState(false);\r\n  const [saleReductionPercent, setReduction] = useState(10);\r\n  const [productName, setName] = useState(\"\");\r\n  const [productDescription, setDescription] = useState(\"\");\r\n  const [productURL, setURL] = useState(\"\");\r\n  const [productPrice, setPrice] = useState(\"\");\r\n  const [quantityInStock, setStockQuantity] = useState(\"\");\r\n  const [notAllFieldsFilled, setFieldsFilled] = useState(false);\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n  const { sale } = useContext(SaleContext);\r\n\r\n  console.log(\"theme\", theme, \"on sale?\", onSale);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/products\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n      });\r\n    console.log(\"fetched \");\r\n  }, []);\r\n\r\n  const addButtonLabelStyle = {\r\n    display: \"block\",\r\n  };\r\n\r\n  const checkFieldsFilled = (\r\n    title,\r\n    description,\r\n    price,\r\n    category,\r\n    image,\r\n    quantityInStock,\r\n    onSale\r\n  ) => {\r\n    if (\r\n      title.length === 0 ||\r\n      description.length === 0 ||\r\n      price.length === 0 ||\r\n      category.length === 0 ||\r\n      image.length === 0 ||\r\n      quantityInStock.length === 0\r\n    ) {\r\n      setFieldsFilled(true);\r\n    } else {\r\n      setFieldsFilled(false);\r\n    }\r\n  };\r\n\r\n  const addProduct = async (\r\n    title,\r\n    description,\r\n    price,\r\n    category,\r\n    image,\r\n    quantityInStock,\r\n    onSale,\r\n    saleReductionPercent\r\n  ) => {\r\n    //alert(\"adding\");\r\n    console.log(\"in add product in client\");\r\n    // check here if all fields have been filled in:\r\n    //alert(\"checking fields\");\r\n    if (\r\n      title.length === 0 ||\r\n      description.length === 0 ||\r\n      price.length === 0 ||\r\n      category.length === 0 ||\r\n      image.length === 0 ||\r\n      quantityInStock.length === 0\r\n    ) {\r\n      //alert(\"not all filled\");\r\n      setFieldsFilled(true);\r\n    } else {\r\n      //alert(\"all filled\");\r\n      setFieldsFilled(false);\r\n      // upload new product to server\r\n      const res = await fetch(\"/api/products\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          title: title,\r\n          description,\r\n          price,\r\n          category,\r\n          image,\r\n          quantityInStock,\r\n          onSale,\r\n          saleReductionPercent,\r\n        }),\r\n      });\r\n      //alert(\"res is \", res);\r\n      const product = await res.json();\r\n      //alert(\"adding product \", product);\r\n      console.log(\"adding product \", product);\r\n\r\n      setProducts([products, ...products]);\r\n\r\n      // clear Add Product form\r\n      setName(\"\");\r\n      setSelectedCategory(\"\");\r\n      setDescription(\"\");\r\n      setURL(\"\");\r\n      setPrice(\"\");\r\n      setStockQuantity(\"\");\r\n      setSale(false);\r\n      setReduction(10);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ background: theme.background }}>\r\n      <div>Input name of product:</div>\r\n      <input\r\n        id=\"productName\"\r\n        value={productName}\r\n        onChange={(e) => setName(e.target.value)}\r\n        //onChange={setName(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      {productName.length === 0 && notAllFieldsFilled && (\r\n        <label for=\"productName\">Enter name of product</label>\r\n      )}\r\n      <div>Input description of product:</div>\r\n      <input\r\n        id=\"productDescription\"\r\n        value={productDescription}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      {productDescription.length === 0 && notAllFieldsFilled && (\r\n        <label for=\"productDescription\">Enter description of product</label>\r\n      )}\r\n      <div>Input image URL of product:</div>\r\n      <input\r\n        id=\"productURL\"\r\n        value={productURL}\r\n        onChange={(e) => setURL(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      {productURL.length === 0 && notAllFieldsFilled && (\r\n        <label for=\"productURL\">Enter url of picture of product</label>\r\n      )}\r\n      {productURL.length !== 0 && (\r\n        <div>\r\n          <img\r\n            className=\"thumbImg\"\r\n            src={productURL}\r\n            alt={{ productName }}\r\n          ></img>\r\n        </div>\r\n      )}\r\n      <div>Input price of new product:</div>\r\n      <input\r\n        id=\"productPrice\"\r\n        value={productPrice}\r\n        onChange={(e) => setPrice(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      {productPrice.length === 0 && notAllFieldsFilled && (\r\n        <label for=\"productPrice\">Enter price of product</label>\r\n      )}\r\n      {products.length > 0 && (\r\n        <CategorySelectAdmin\r\n          selectedCategory={selectedCategory}\r\n          setSelectedCategory={setSelectedCategory}\r\n          products={products}\r\n        ></CategorySelectAdmin>\r\n      )}\r\n      <div>Number of product in stock:</div>\r\n      <input\r\n        id=\"quantityInStock\"\r\n        value={quantityInStock}\r\n        onChange={(e) => setStockQuantity(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n\r\n      {quantityInStock.length === 0 && notAllFieldsFilled && (\r\n        <label for=\"quantityInStock\">How many of product are in stock?</label>\r\n      )}\r\n      <button\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n        onClick={(e) => {\r\n          alert(\"on slae?\", onSale);\r\n          setSale(!onSale);\r\n        }}\r\n      >\r\n        on slae?\r\n      </button>\r\n      <div>Put item on sale:</div>\r\n      <input\r\n        id=\"setSale\"\r\n        type=\"checkbox\"\r\n        value={onSale}\r\n        onChange={(e) => setSale(!onSale)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      {onSale && (\r\n        <div>\r\n          <div>Percentage price reduction: </div>\r\n          <input\r\n            id=\"reductionInput\"\r\n            value={saleReductionPercent}\r\n            onChange={(e) => {\r\n              setReduction(e.target.value);\r\n            }}\r\n            style={{ color: theme.background, background: theme.foreground }}\r\n          ></input>\r\n        </div>\r\n      )}\r\n      <button\r\n        id=\"addNewProductButton\"\r\n        style={{ background: theme.background, color: theme.foreground }}\r\n        onClick={(e) =>\r\n          addProduct(\r\n            productName,\r\n            productDescription,\r\n            productPrice,\r\n            selectedCategory,\r\n            productURL,\r\n            quantityInStock,\r\n            onSale,\r\n            saleReductionPercent\r\n          )\r\n        }\r\n      >\r\n        Add new product\r\n      </button>\r\n      {notAllFieldsFilled && (\r\n        <label for=\"addNewProductButton\" style={{ display: \"block\" }}>\r\n          Complete all fields before uploading new product.\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n\r\n/*\r\naddProduct(\r\n            productName,\r\n            productDescription,\r\n            productPrice,\r\n            selectedCategory,\r\n            productURL,\r\n            quantityInStock,\r\n            onSale\r\n          )\r\n          */\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Header\\Header.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Products\\Products.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CategorySelect\\CategorySelect.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SaleCountdown\\SaleCountdown.js",["129"],"import React, { useEffect, useRef, useContext } from \"react\";\r\nimport \"./SaleCountdown.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\n/* this component is called by the Header component *\r\n\r\n/* counts down by seconds the time left until the end of the sale,\r\nand sets state of display message depending on whether the sale has finished */\r\n\r\nconst SaleCountdown = (props) => {\r\n  const { secondsLeft, setSecondsLeft, isSale, setSale } = props;\r\n  const [theme] = useContext(ThemeContext);\r\n\r\n  const convertToDHMS = () => {\r\n    let temp = \"\";\r\n    if (secondsLeft) {\r\n      temp = `\r\n      ${Math.floor(secondsLeft / (60 * 60 * 24))}:${Math.floor(\r\n        (secondsLeft / (60 * 60)) % 24\r\n      )}:`;\r\n      temp = `${temp}${Math.floor((secondsLeft / 60) % 60)}:${Math.floor(\r\n        secondsLeft % 60\r\n      )}`;\r\n      return temp;\r\n    }\r\n  };\r\n\r\n  /************************************ */\r\n  /* version using setTimeout.\r\n  /************************************ */\r\n  /*without the use of useRef, we could not use setInterval here, as it causes an infinite loop! \r\n  /* Each time the state of DHMSLeft is updated, useEffect sets a 1 second timeout.\r\n  At the end of the timeout, the state of the DHMSLeft and secondsLeft update, and so the useEffect runs again,\r\n  and sets another 1 second timeout.\r\n  If the secondsLeft reaches zero\r\n \r\n  useEffect(() => {\r\n    const countdown = setTimeout(() => {\r\n      if (secondsLeft) {\r\n        setSecondsLeft(secondsLeft - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(countdown);\r\n    */\r\n\r\n  /************************************ */\r\n  /* version using setInterval - needs to use useRef.\r\n  /************************************ */\r\n  const intervalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      if (secondsLeft) {\r\n        setSecondsLeft(secondsLeft - 1);\r\n        console.log(\"counting down, secs:\", secondsLeft);\r\n        setSale(\"true\");\r\n      } else {\r\n        setSale(\"false\");\r\n      }\r\n    }, 1000);\r\n\r\n    //use useRef to create a mutable ref object from the setTimeout identifier (\"countdown\").\r\n    // This lets the timeout id be accessible from the whole component.\r\n    // If we stored the id in a state variable, the component would be re-rendered\r\n    // after the state update so a new interval will be created, creating an infinite loop.\r\n    intervalRef.current = countdown;\r\n\r\n    /********************** */\r\n    /* EXPLANATION:          */\r\n    /********************** */\r\n    /* the intervalRef's current value is updated if starting a new countdown, \r\n    but the intervalRef itself stays fixed in the DOM and doesn't re-render when there's a change in \r\n    state of the secondsLeft variable\r\n    This how the infinite loop is prevented.\r\n    */\r\n\r\n    // Clear timeout if the component is unmounted\r\n    return () => clearTimeout(countdown);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [secondsLeft]);\r\n  //The return will runs each time useEffect finishes the timeout except for the first time\r\n  // and clears the timeout if the component is unmounted\r\n\r\n  const saleMessage = () => {\r\n    return secondsLeft\r\n      ? `10% off!! ${convertToDHMS(\r\n          secondsLeft\r\n        )} days left until the end of the Sale`\r\n      : \"Sale over\";\r\n  };\r\n\r\n  return (\r\n    <div style={{ color: theme.foreground, background: theme.background }}>\r\n      <h2 id=\"message\">{saleMessage()} </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nSaleCountdown.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  setSecondsLeft: PropTypes.func,\r\n};\r\n\r\nexport default SaleCountdown;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeThemeColors\\ChangeThemeColors.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SliderFilterPrice\\SliderFilterPrice.js",["130"],"import React, { useEffect, useContext } from \"react\";\r\n// need to install and design: npm install antd\r\nimport { Slider } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport ThemeContext, { currentTheme } from \"../../contexts/ThemeContexts\";\r\n\r\nconst SliderFilterPrice = (props) => {\r\n  const { priceRange, setPriceRange, products } = props;\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  useEffect(() => {\r\n    if (products.length) {\r\n      console.log(\"prods are \", products);\r\n      let max = 0;\r\n      for (let i = 0; i < products.length; i++) {\r\n        max = products[i].price > max ? products[i].price : max;\r\n        console.log(\"max: \", max);\r\n      }\r\n      setPriceRange([0, max + 5]);\r\n      console.log(\"max price is: \", max);\r\n    }\r\n  }, [products, setPriceRange]);\r\n\r\n  //const [disabled] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ color: theme.foreground, background: theme.background }}>\r\n        Select Price range:\r\n      </div>\r\n      <Slider\r\n        range\r\n        defaultValue={[0, 1000]}\r\n        min={0}\r\n        max={1000}\r\n        value={priceRange}\r\n        onChange={setPriceRange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SliderFilterPrice;\r\n\r\n/*\r\n /* {\r\n    Object.keys(groupBy(products, \"price\")).map((price) => price);\r\n  }*/\r\n\r\n// useEffect(() => {\r\n/* setPriceRange(() => [\r\n      0,\r\n      Math.max(\r\n        ...products.map(\r\n          (product) => product.price.map((o) => o.y).map((o) => o.y),\r\n          0\r\n        )\r\n      ),\r\n    ]);*/\r\n//products.map((product) => product.price.map((o) => console.log(o)));\r\n/*console.log(\r\n      \"max: \",\r\n      Math.max(...products.map((product) => product.price), 0)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n // }, []);\r\n  // const maxValueOfY = Math.max(...arrayToSearchIn.map(o => o.y), 0);\r\n*/\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SearchKeyword\\SearchKeyword.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ProductDisplayClass\\ProductDisplayClass.js",["131","132","133","134","135"],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ListCategories\\ListCategories.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\UserContexts.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\DisplayUser\\DisplayUser.js",["136","137","138","139","140"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\nimport ChangeUser from \"../ChangeUser/ChangeUser\";\r\n\r\nconst DisplayUser = () => {\r\n  const { user, toggleUser } = useContext(UserContext);\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div style={{ paddingBottom: \"20px\" }}>\r\n      <div>Welcome {user.name}</div>\r\n      <ChangeUser />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayUser;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeUser\\ChangeUser.js",["141"],"import React, { useContext } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\nconst ChangeUser = () => {\r\n  const { user, toggleUser } = useContext(UserContext);\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <button\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.foreground,\r\n      }}\r\n      onClick={toggleUser}\r\n    >\r\n      {user.name === \"Admin\" && <div>Login as Guest</div>}\r\n      {user.name === \"Guest\" && <div>Login as Admin</div>}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ChangeUser;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CategorySelectAdmin\\CategorySelectAdmin.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\storagetools\\LocalStorageArrayTools.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\SaleContexts.js",["142"],"import { createContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst sales = {\r\n  endOfYearSale: {\r\n    isSale: \"true\",\r\n    percentOff: 20,\r\n    dateEnd: \"2021-10-25\",\r\n    name: \"End of Year Sale\",\r\n    color: \"#002200\",\r\n  },\r\n  noSale: {\r\n    isSale: \"false\",\r\n    percentOff: 0,\r\n    dateEnd: \"2015-03-25\",\r\n    name: \"No special offers\",\r\n    color: \"#002200\",\r\n  },\r\n  summerSale: {\r\n    isSale: \"true\",\r\n    percentOff: 10,\r\n    dateEnd: \"2020-08-31\",\r\n    name: \"Summer Sale\",\r\n    color: \"#002200\",\r\n  },\r\n};\r\n\r\nlet currentSale = sales.endOfYearSale;\r\nconst SaleContext = createContext(null);\r\nexport { sales, currentSale };\r\nexport default SaleContext;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CartIcon\\CartIcon.js",["143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":19},{"ruleId":"148","severity":1,"message":"152","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":19},{"ruleId":"148","severity":1,"message":"153","line":4,"column":23,"nodeType":"150","messageId":"151","endLine":4,"endColumn":28},{"ruleId":"148","severity":1,"message":"154","line":18,"column":17,"nodeType":"150","messageId":"151","endLine":18,"endColumn":27},{"ruleId":"148","severity":1,"message":"155","line":6,"column":24,"nodeType":"150","messageId":"151","endLine":6,"endColumn":30},{"ruleId":"148","severity":1,"message":"153","line":7,"column":23,"nodeType":"150","messageId":"151","endLine":7,"endColumn":28},{"ruleId":"148","severity":1,"message":"154","line":33,"column":17,"nodeType":"150","messageId":"151","endLine":33,"endColumn":27},{"ruleId":"148","severity":1,"message":"156","line":35,"column":11,"nodeType":"150","messageId":"151","endLine":35,"endColumn":15},{"ruleId":"148","severity":1,"message":"157","line":38,"column":30,"nodeType":"150","messageId":"151","endLine":38,"endColumn":45},{"ruleId":"148","severity":1,"message":"158","line":46,"column":22,"nodeType":"150","messageId":"151","endLine":46,"endColumn":28},{"ruleId":"148","severity":1,"message":"159","line":78,"column":13,"nodeType":"150","messageId":"151","endLine":78,"endColumn":19},{"ruleId":"148","severity":1,"message":"160","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"148","severity":1,"message":"161","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":16},{"ruleId":"148","severity":1,"message":"153","line":10,"column":23,"nodeType":"150","messageId":"151","endLine":10,"endColumn":28},{"ruleId":"148","severity":1,"message":"162","line":18,"column":10,"nodeType":"150","messageId":"151","endLine":18,"endColumn":15},{"ruleId":"148","severity":1,"message":"163","line":19,"column":10,"nodeType":"150","messageId":"151","endLine":19,"endColumn":21},{"ruleId":"148","severity":1,"message":"164","line":19,"column":23,"nodeType":"150","messageId":"151","endLine":19,"endColumn":37},{"ruleId":"148","severity":1,"message":"165","line":20,"column":10,"nodeType":"150","messageId":"151","endLine":20,"endColumn":26},{"ruleId":"148","severity":1,"message":"156","line":33,"column":11,"nodeType":"150","messageId":"151","endLine":33,"endColumn":15},{"ruleId":"148","severity":1,"message":"166","line":46,"column":9,"nodeType":"150","messageId":"151","endLine":46,"endColumn":28},{"ruleId":"148","severity":1,"message":"167","line":50,"column":9,"nodeType":"150","messageId":"151","endLine":50,"endColumn":26},{"ruleId":"148","severity":1,"message":"168","line":12,"column":40,"nodeType":"150","messageId":"151","endLine":12,"endColumn":46},{"ruleId":"148","severity":1,"message":"169","line":5,"column":24,"nodeType":"150","messageId":"151","endLine":5,"endColumn":36},{"ruleId":"148","severity":1,"message":"153","line":5,"column":23,"nodeType":"150","messageId":"151","endLine":5,"endColumn":28},{"ruleId":"148","severity":1,"message":"155","line":7,"column":24,"nodeType":"150","messageId":"151","endLine":7,"endColumn":30},{"ruleId":"148","severity":1,"message":"170","line":21,"column":5,"nodeType":"150","messageId":"151","endLine":21,"endColumn":14},{"ruleId":"148","severity":1,"message":"168","line":25,"column":5,"nodeType":"150","messageId":"151","endLine":25,"endColumn":11},{"ruleId":"148","severity":1,"message":"156","line":31,"column":11,"nodeType":"150","messageId":"151","endLine":31,"endColumn":15},{"ruleId":"148","severity":1,"message":"171","line":1,"column":29,"nodeType":"150","messageId":"151","endLine":1,"endColumn":37},{"ruleId":"148","severity":1,"message":"172","line":1,"column":39,"nodeType":"150","messageId":"151","endLine":1,"endColumn":48},{"ruleId":"148","severity":1,"message":"154","line":7,"column":17,"nodeType":"150","messageId":"151","endLine":7,"endColumn":27},{"ruleId":"148","severity":1,"message":"173","line":8,"column":11,"nodeType":"150","messageId":"151","endLine":8,"endColumn":16},{"ruleId":"148","severity":1,"message":"174","line":8,"column":18,"nodeType":"150","messageId":"151","endLine":8,"endColumn":29},{"ruleId":"148","severity":1,"message":"174","line":7,"column":18,"nodeType":"150","messageId":"151","endLine":7,"endColumn":29},{"ruleId":"148","severity":1,"message":"175","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":20},{"ruleId":"148","severity":1,"message":"176","line":7,"column":9,"nodeType":"150","messageId":"151","endLine":7,"endColumn":18},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'DisplayUser' is defined but never used.","Identifier","unusedVar","'SaleContext' is defined but never used.","'sales' is defined but never used.","'toggleUser' is assigned a value but never used.","'themes' is defined but never used.","'sale' is assigned a value but never used.","'setFieldsFilled' is assigned a value but never used.","'setURL' is assigned a value but never used.","'result' is assigned a value but never used.","'Header' is defined but never used.","'Products' is defined but never used.","'color' is assigned a value but never used.","'secondsLeft' is assigned a value but never used.","'setSecondsLeft' is assigned a value but never used.","'salesProductsIds' is assigned a value but never used.","'addButtonLabelStyle' is assigned a value but never used.","'checkFieldsFilled' is assigned a value but never used.","'isSale' is assigned a value but never used.","'currentTheme' is defined but never used.","'productid' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'theme' is assigned a value but never used.","'toggleTheme' is assigned a value but never used.","'withRouter' is defined but never used.","'CartItems' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]