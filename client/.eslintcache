[{"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\index.js":"1","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\reportWebVitals.js":"2","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\App.js":"3","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\contexts\\ThemeContexts.js":"4","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\contexts\\UserContexts.js":"5","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\contexts\\SaleContexts.js":"6","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\pages\\Home\\Home.js":"7","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\pages\\ProductInfo\\ProductInfo.js":"8","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\pages\\Admin\\Admin.js":"9","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\ChangeThemeColors\\ChangeThemeColors.js":"10","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\pages\\About\\About.js":"11","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\DisplayUser\\DisplayUser.js":"12","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\storagetools\\LocalStorageArrayTools.js":"13","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\Products\\Products.js":"14","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\Header\\Header.js":"15","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\CategorySelectAdmin\\CategorySelectAdmin.js":"16","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\CartIcon\\CartIcon.js":"17","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\ChangeUser\\ChangeUser.js":"18","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\SearchKeyword\\SearchKeyword.js":"19","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\SaleCountdown\\SaleCountdown.js":"20","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\CategorySelect\\CategorySelect.js":"21","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\ProductDisplayClass\\ProductDisplayClass.js":"22","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\SliderFilterPrice\\SliderFilterPrice.js":"23","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\ListCategories\\ListCategories.js":"24","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\CartDisplayContents\\CartDisplayContents.js":"25","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\CartItem\\CartItem.js":"26"},{"size":517,"mtime":1619161537280,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1619161537288,"results":"29","hashOfConfig":"28"},{"size":3841,"mtime":1619181167189,"results":"30","hashOfConfig":"28"},{"size":554,"mtime":1619161537277,"results":"31","hashOfConfig":"28"},{"size":339,"mtime":1619161537278,"results":"32","hashOfConfig":"28"},{"size":688,"mtime":1619161537277,"results":"33","hashOfConfig":"28"},{"size":2471,"mtime":1619181430139,"results":"34","hashOfConfig":"28"},{"size":20143,"mtime":1619432193589,"results":"35","hashOfConfig":"28"},{"size":8144,"mtime":1619161537284,"results":"36","hashOfConfig":"28"},{"size":516,"mtime":1619161537247,"results":"37","hashOfConfig":"28"},{"size":293,"mtime":1619161537282,"results":"38","hashOfConfig":"28"},{"size":551,"mtime":1619161537251,"results":"39","hashOfConfig":"28"},{"size":1112,"mtime":1619161537275,"results":"40","hashOfConfig":"28"},{"size":2340,"mtime":1619181402221,"results":"41","hashOfConfig":"28"},{"size":3159,"mtime":1619394097200,"results":"42","hashOfConfig":"28"},{"size":1763,"mtime":1619161537246,"results":"43","hashOfConfig":"28"},{"size":2918,"mtime":1619393970320,"results":"44","hashOfConfig":"28"},{"size":641,"mtime":1619161537249,"results":"45","hashOfConfig":"28"},{"size":1909,"mtime":1619161537261,"results":"46","hashOfConfig":"28"},{"size":3658,"mtime":1619161537260,"results":"47","hashOfConfig":"28"},{"size":2077,"mtime":1619161537245,"results":"48","hashOfConfig":"28"},{"size":3251,"mtime":1619161537257,"results":"49","hashOfConfig":"28"},{"size":1836,"mtime":1619161537264,"results":"50","hashOfConfig":"28"},{"size":1884,"mtime":1619161537255,"results":"51","hashOfConfig":"28"},{"size":1757,"mtime":1619183366024,"results":"52","hashOfConfig":"28"},{"size":7925,"mtime":1619431346545,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"4yp0k4",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\index.js",[],["119","120"],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\reportWebVitals.js",[],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\App.js",["121","122"],"import \"./App.css\";\r\nimport { useState } from \"react\";\r\n\r\n//for SPAP:\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n//imports of pages definitions\r\nimport Home from \"./pages/Home/Home\";\r\nimport About from \"./pages/About/About\";\r\nimport Admin from \"./pages/Admin/Admin\";\r\nimport ProductInfo from \"./pages/ProductInfo/ProductInfo\";\r\nimport DisplayUser from \"./components/DisplayUser/DisplayUser\";\r\nimport ChangeThemeColors from \"./components/ChangeThemeColors/ChangeThemeColors\";\r\n\r\nimport ThemeContext, { themes } from \"./contexts/ThemeContexts\";\r\nimport UserContext, { users } from \"./contexts/UserContexts\";\r\nimport SaleContext, { sales } from \"./contexts/SaleContexts\";\r\n\r\n/* App calls ProductsContainerClass\r\n  which calls SaleCountdown\r\n  which calls Products\r\n  which calls ListCategories, and also calls ProductDisplayClass.\r\n  ProductDisplayClass renders each product seperately in a product card.\r\n  Products maps the array containing the shop information into separate items each containing info of one product.\r\n\r\nHeader calls SaleCountdown component which counts the time until end of sale and sets the Sale Message in the Header\r\nHeader also calls CategorySelect component to choose products filter. \r\n  */\r\n\r\n//see here for example of changing theme:\r\n// https://stackoverflow.com/questions/54738681/how-to-change-context-value-while-using-react-hook-of-usecontext\r\n\r\nconst App = () => {\r\n  const [theme, setTheme] = useState(themes.light);\r\n  const [user, setUser] = useState(users.guest);\r\n  const [sale, setSale] = useState(sales.endOfYearSale);\r\n  const [numInCart, setNumInCart] = useState(0);\r\n\r\n  function toggleTheme() {\r\n    setTheme((theme) => (theme === themes.light ? themes.dark : themes.light));\r\n  }\r\n\r\n  function toggleUser() {\r\n    console.log(\"request to change user\");\r\n    setUser((user) => (user === users.guest ? users.admin : users.guest));\r\n    console.log(\"logged in as user \", user.name);\r\n  }\r\n\r\n  function switchSale(specialOffer) {\r\n    console.log(\"set sale to \", sales.name);\r\n    setSale((sale) => sale === sales.endOfYearSale);\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      <UserContext.Provider value={{ user, toggleUser }}>\r\n        <SaleContext.Provider value={{ sale, switchSale }}>\r\n          <Router>\r\n            <div\r\n              className=\"outer-div\"\r\n              style={{ color: theme.foreground, background: theme.background }}\r\n            >\r\n              <ChangeThemeColors />\r\n              <DisplayUser />\r\n              <nav>\r\n                <ul>\r\n                  <li>\r\n                    <Link to=\"/Home\">Home</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/About\">About</Link>\r\n                  </li>\r\n                  {user.name === \"Admin\" && (\r\n                    <li>\r\n                      <Link to=\"/Admin\">Admin - add new product</Link>\r\n                    </li>\r\n                  )}\r\n                </ul>\r\n              </nav>\r\n\r\n              {/* A <Switch> looks through its children <Route>s and\r\n        renders the first one that matches the current URL. */}\r\n              <Switch>\r\n                <Route path=\"/Admin\">\r\n                  <Admin />\r\n                </Route>\r\n                <Route exact path=\"/Home\">\r\n                  <Home />\r\n                </Route>\r\n                <Route path=\"/About\">\r\n                  <About />\r\n                </Route>\r\n                <Route path=\"/products/:_id\" component={ProductInfo}></Route>\r\n                <Route path=\"/\">\r\n                  <Home />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </SaleContext.Provider>\r\n      </UserContext.Provider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\contexts\\ThemeContexts.js",[],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\contexts\\UserContexts.js",[],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\contexts\\SaleContexts.js",["123"],"import { createContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst sales = {\r\n  endOfYearSale: {\r\n    isSale: \"true\",\r\n    percentOff: 20,\r\n    dateEnd: \"2021-10-25\",\r\n    name: \"End of Year Sale\",\r\n    color: \"#002200\",\r\n  },\r\n  noSale: {\r\n    isSale: \"false\",\r\n    percentOff: 0,\r\n    dateEnd: \"2015-03-25\",\r\n    name: \"No special offers\",\r\n    color: \"#002200\",\r\n  },\r\n  summerSale: {\r\n    isSale: \"true\",\r\n    percentOff: 10,\r\n    dateEnd: \"2020-08-31\",\r\n    name: \"Summer Sale\",\r\n    color: \"#002200\",\r\n  },\r\n};\r\n\r\nlet currentSale = sales.endOfYearSale;\r\nconst SaleContext = createContext(null);\r\nexport { sales, currentSale };\r\nexport default SaleContext;\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\pages\\Home\\Home.js",["124","125","126","127"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport DisplayUser from \"../../components/DisplayUser/DisplayUser\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport SaleContext, { sales } from \"../../contexts/SaleContexts\";\r\n\r\n//components of content:\r\nimport Header from \"../../components/Header/Header\";\r\nimport Products from \"../../components/Products/Products\";\r\n\r\nconst Home = () => {\r\n  const [secondsLeft, setSecondsLeft] = useState(5);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [isSale, setSale] = useState(\"true\");\r\n  const [priceRange, setPriceRange] = useState([0, 200]);\r\n  const [searchKeyword, setSearch] = useState(\"\");\r\n  const [numProducts, setNumProds] = useState(\"\");\r\n  const { user, toggleUser } = useContext(UserContext);\r\n\r\n  // fetching from my server on localhost at 192.168.43.81 on port 8000:\r\n  /*useEffect(() => {\r\n    fetch(\"http://192.168.43.81:8000/products.json\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n      });\r\n    console.log(\"fetched \");\r\n  }, []);\r\n  */\r\n  /* mongoose:\r\n fetch(\"http://10.0.0.193:8000/products\")\r\n */\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/products\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n      });\r\n    console.log(\"fetched products in Home\");\r\n    setNumProds(products.length);\r\n  }, [products.length]);\r\n\r\n  return (\r\n    <div>\r\n      <div>Num products in shop: {numProducts}</div>\r\n      {user.name === \"Admin\" && <div>Click on product to edit it</div>}\r\n      {user.name !== \"Admin\" && (\r\n        <div>Click on product to see details and order</div>\r\n      )}\r\n      <Header\r\n        selectedCategory={selectedCategory}\r\n        setSelectedCategory={setSelectedCategory}\r\n        secondsLeft={secondsLeft}\r\n        setSecondsLeft={setSecondsLeft}\r\n        products={products}\r\n        setProducts={setProducts}\r\n        isSale={isSale}\r\n        setSale={setSale}\r\n        priceRange={priceRange}\r\n        setPriceRange={setPriceRange}\r\n        searchKeyword={searchKeyword}\r\n        setSearch={setSearch}\r\n      ></Header>\r\n      <Products\r\n        secondsLeft={secondsLeft}\r\n        selectedCategory={selectedCategory}\r\n        products={products}\r\n        isSale={isSale}\r\n        priceRange={priceRange}\r\n      ></Products>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n/*\r\n */\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\pages\\ProductInfo\\ProductInfo.js",["128","129","130","131","132","133","134","135"],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\pages\\Admin\\Admin.js",["136","137","138","139","140","141","142","143","144","145"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./Admin.css\";\r\n\r\n//components of content:\r\nimport Header from \"../../components/Header/Header\";\r\nimport Products from \"../../components/Products/Products\";\r\n//import SearchKeyword from \"../SearchKeyword/SearchKeyword\";\r\nimport CategorySelectAdmin from \"../../components/CategorySelectAdmin/CategorySelectAdmin\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\nimport SaleContext, { sales } from \"../../contexts/SaleContexts\";\r\n\r\n/*****\r\n * NEED TO ADD NEW FIELDS TO FORM\r\n * *******\r\n */\r\n\r\nconst Admin = () => {\r\n  const [color] = useState(\"red\");\r\n  const [secondsLeft, setSecondsLeft] = useState(65);\r\n  const [salesProductsIds] = useState([1, 3, 5, 6]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [onSale, setSale] = useState(false);\r\n  const [saleReductionPercent, setReduction] = useState(10);\r\n  const [productName, setName] = useState(\"\");\r\n  const [productDescription, setDescription] = useState(\"\");\r\n  const [productURL, setURL] = useState(\"\");\r\n  const [productPrice, setPrice] = useState(\"\");\r\n  const [quantityInStock, setStockQuantity] = useState(\"\");\r\n  const [notAllFieldsFilled, setFieldsFilled] = useState(false);\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n  const { sale } = useContext(SaleContext);\r\n\r\n  console.log(\"theme\", theme, \"on sale?\", onSale);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/products\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n      });\r\n    console.log(\"fetched \");\r\n  }, []);\r\n\r\n  const addButtonLabelStyle = {\r\n    display: \"block\",\r\n  };\r\n\r\n  const checkFieldsFilled = (\r\n    title,\r\n    description,\r\n    price,\r\n    category,\r\n    image,\r\n    quantityInStock,\r\n    onSale\r\n  ) => {\r\n    if (\r\n      title.length === 0 ||\r\n      description.length === 0 ||\r\n      price.length === 0 ||\r\n      category.length === 0 ||\r\n      image.length === 0 ||\r\n      quantityInStock.length === 0\r\n    ) {\r\n      setFieldsFilled(true);\r\n    } else {\r\n      setFieldsFilled(false);\r\n    }\r\n  };\r\n\r\n  const addProduct = async (\r\n    title,\r\n    description,\r\n    price,\r\n    category,\r\n    image,\r\n    quantityInStock,\r\n    onSale,\r\n    saleReductionPercent\r\n  ) => {\r\n    //alert(\"adding\");\r\n    console.log(\"in add product in client\");\r\n    // check here if all fields have been filled in:\r\n    //alert(\"checking fields\");\r\n    if (\r\n      title.length === 0 ||\r\n      description.length === 0 ||\r\n      price.length === 0 ||\r\n      category.length === 0 ||\r\n      image.length === 0 ||\r\n      quantityInStock.length === 0\r\n    ) {\r\n      //alert(\"not all filled\");\r\n      setFieldsFilled(true);\r\n    } else {\r\n      //alert(\"all filled\");\r\n      setFieldsFilled(false);\r\n      // upload new product to server\r\n      const res = await fetch(\"/api/products\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          title: title,\r\n          description,\r\n          price,\r\n          category,\r\n          image,\r\n          quantityInStock,\r\n          onSale,\r\n          saleReductionPercent,\r\n        }),\r\n      });\r\n      //alert(\"res is \", res);\r\n      const product = await res.json();\r\n      //alert(\"adding product \", product);\r\n      console.log(\"adding product \", product);\r\n\r\n      setProducts([products, ...products]);\r\n\r\n      // clear Add Product form\r\n      setName(\"\");\r\n      setSelectedCategory(\"\");\r\n      setDescription(\"\");\r\n      setURL(\"\");\r\n      setPrice(\"\");\r\n      setStockQuantity(\"\");\r\n      setSale(false);\r\n      setReduction(10);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ background: theme.background }}>\r\n      <div>Input name of product:</div>\r\n      <input\r\n        id=\"productName\"\r\n        value={productName}\r\n        onChange={(e) => setName(e.target.value)}\r\n        //onChange={setName(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      {productName.length === 0 && notAllFieldsFilled && (\r\n        <label for=\"productName\">Enter name of product</label>\r\n      )}\r\n      <div>Input description of product:</div>\r\n      <input\r\n        id=\"productDescription\"\r\n        value={productDescription}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      {productDescription.length === 0 && notAllFieldsFilled && (\r\n        <label for=\"productDescription\">Enter description of product</label>\r\n      )}\r\n      <div>Input image URL of product:</div>\r\n      <input\r\n        id=\"productURL\"\r\n        value={productURL}\r\n        onChange={(e) => setURL(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      {productURL.length === 0 && notAllFieldsFilled && (\r\n        <label for=\"productURL\">Enter url of picture of product</label>\r\n      )}\r\n      {productURL.length !== 0 && (\r\n        <div>\r\n          <img\r\n            className=\"thumbImg\"\r\n            src={productURL}\r\n            alt={{ productName }}\r\n          ></img>\r\n        </div>\r\n      )}\r\n      <div>Input price of new product:</div>\r\n      <input\r\n        id=\"productPrice\"\r\n        value={productPrice}\r\n        onChange={(e) => setPrice(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      {productPrice.length === 0 && notAllFieldsFilled && (\r\n        <label for=\"productPrice\">Enter price of product</label>\r\n      )}\r\n      {products.length > 0 && (\r\n        <CategorySelectAdmin\r\n          selectedCategory={selectedCategory}\r\n          setSelectedCategory={setSelectedCategory}\r\n          products={products}\r\n        ></CategorySelectAdmin>\r\n      )}\r\n      <div>Number of product in stock:</div>\r\n      <input\r\n        id=\"quantityInStock\"\r\n        value={quantityInStock}\r\n        onChange={(e) => setStockQuantity(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n\r\n      {quantityInStock.length === 0 && notAllFieldsFilled && (\r\n        <label for=\"quantityInStock\">How many of product are in stock?</label>\r\n      )}\r\n      <button\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n        onClick={(e) => {\r\n          alert(\"on slae?\", onSale);\r\n          setSale(!onSale);\r\n        }}\r\n      >\r\n        on slae?\r\n      </button>\r\n      <div>Put item on sale:</div>\r\n      <input\r\n        id=\"setSale\"\r\n        type=\"checkbox\"\r\n        value={onSale}\r\n        onChange={(e) => setSale(!onSale)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      {onSale && (\r\n        <div>\r\n          <div>Percentage price reduction: </div>\r\n          <input\r\n            id=\"reductionInput\"\r\n            value={saleReductionPercent}\r\n            onChange={(e) => {\r\n              setReduction(e.target.value);\r\n            }}\r\n            style={{ color: theme.background, background: theme.foreground }}\r\n          ></input>\r\n        </div>\r\n      )}\r\n      <button\r\n        id=\"addNewProductButton\"\r\n        style={{ background: theme.background, color: theme.foreground }}\r\n        onClick={(e) =>\r\n          addProduct(\r\n            productName,\r\n            productDescription,\r\n            productPrice,\r\n            selectedCategory,\r\n            productURL,\r\n            quantityInStock,\r\n            onSale,\r\n            saleReductionPercent\r\n          )\r\n        }\r\n      >\r\n        Add new product\r\n      </button>\r\n      {notAllFieldsFilled && (\r\n        <label for=\"addNewProductButton\" style={{ display: \"block\" }}>\r\n          Complete all fields before uploading new product.\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n\r\n/*\r\naddProduct(\r\n            productName,\r\n            productDescription,\r\n            productPrice,\r\n            selectedCategory,\r\n            productURL,\r\n            quantityInStock,\r\n            onSale\r\n          )\r\n          */\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\ChangeThemeColors\\ChangeThemeColors.js",[],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\pages\\About\\About.js",[],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\DisplayUser\\DisplayUser.js",["146","147","148","149","150"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\nimport ChangeUser from \"../ChangeUser/ChangeUser\";\r\n\r\nconst DisplayUser = () => {\r\n  const { user, toggleUser } = useContext(UserContext);\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div style={{ paddingBottom: \"20px\" }}>\r\n      <div>Welcome {user.name}</div>\r\n      <ChangeUser />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayUser;\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\storagetools\\LocalStorageArrayTools.js",[],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\Products\\Products.js",[],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\Header\\Header.js",["151","152"],"import { React, useContext, useState } from \"react\";\r\nimport createPersistedState from \"use-persisted-state\";\r\nimport SaleCountdown from \"../SaleCountdown/SaleCountdown\";\r\nimport PropTypes from \"prop-types\";\r\nimport CategorySelect from \"../CategorySelect/CategorySelect\";\r\nimport SliderFilterPrice from \"../SliderFilterPrice/SliderFilterPrice\";\r\nimport \"./Header.css\";\r\nimport SearchKeyword from \"../SearchKeyword/SearchKeyword\";\r\nimport \"../../components/storagetools/LocalStorageArrayTools.js\";\r\nimport CartIcon from \"../CartIcon/CartIcon\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nconst useCartState = createPersistedState(\"cart\");\r\n\r\nconst Header = (props) => {\r\n  const {\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    secondsLeft,\r\n    setSecondsLeft,\r\n    isSale,\r\n    setSale,\r\n    products,\r\n    setProducts,\r\n    priceRange,\r\n    setPriceRange,\r\n    searchKeyword,\r\n    setSearch,\r\n  } = props;\r\n\r\n  const { user, toggleUser } = useContext(UserContext);\r\n\r\n  const [cart, setCart] = useCartState({});\r\n  const [numInCart, setNumInCart] = useState(cart.reduce((n, { quantity }) => n + quantity, 0));\r\n  console.log(\"in header, numincart is: \", numInCart);\r\n\r\n\r\n  //const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div>\r\n      {user.name === \"Guest\" && <CartIcon numInCart={numInCart} setNumInCart={setNumInCart}/>}\r\n      <SaleCountdown\r\n        secondsLeft={secondsLeft}\r\n        setSecondsLeft={setSecondsLeft}\r\n        isSale={isSale}\r\n        setSale={setSale}\r\n      ></SaleCountdown>\r\n      {products.length > 0 && (\r\n        <CategorySelect\r\n          selectedCategory={selectedCategory}\r\n          setSelectedCategory={setSelectedCategory}\r\n          products={products}\r\n          setProducts={setProducts}\r\n        ></CategorySelect>\r\n      )}\r\n      {products.length > 0 && (\r\n        <SearchKeyword\r\n          searchKeyword={searchKeyword}\r\n          setSearch={setSearch}\r\n          products={products}\r\n          setProducts={setProducts}\r\n        ></SearchKeyword>\r\n      )}\r\n      <div className=\"price-range\">\r\n        <SliderFilterPrice\r\n          priceRange={priceRange}\r\n          setPriceRange={setPriceRange}\r\n          products={products}\r\n        ></SliderFilterPrice>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  categories: PropTypes.arrayOf(PropTypes.string),\r\n  selectedCategory: PropTypes.string,\r\n  setSelectedCategory: PropTypes.func,\r\n};\r\n/* need to add proptypes of products*/\r\n\r\nexport default Header;\r\n\r\n/*      return (\r\n        <div>\r\n          <h1> App</h1>\r\n          <SaleCountdown\r\n            secondsLeft={secondsLeft}\r\n            setSecondsLeft={setSecondsLeft}\r\n            isSale={isSale}\r\n            setSale={setSale}\r\n          ></SaleCountdown>\r\n          {products.length > 0 && (\r\n            <CategorySelect\r\n              selectedCategory={selectedCategory}\r\n              setSelectedCategory={setSelectedCategory}\r\n              products={products}\r\n            ></CategorySelect>\r\n            <SliderFilterPrice priceRange={priceRange}></SliderFilterPrice}\r\n          )}\r\n        </div>\r\n      );\r\n      */\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\CategorySelectAdmin\\CategorySelectAdmin.js",[],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\CartIcon\\CartIcon.js",["153","154","155","156"],"import { React, useState, useEffect, useReducer } from \"react\";\r\n\r\n// installed custom hook use-persisted-state from https://github.com/donavon/use-persisted-state\r\n// to keep localStorage in state for automatic render update of\r\n// cart values from localStorage\r\nimport createPersistedState from \"use-persisted-state\";\r\n\r\nimport cartIcon from \"../../components/icons/shoppingCart.png\";\r\nimport \"../../components/storagetools/LocalStorageArrayTools.js\";\r\nimport \"./CartIcon.css\";\r\nimport CartDisplayContents from \"../CartDisplayContents/CartDisplayContents\";\r\n\r\nconst useCartState = createPersistedState(\"cart\");\r\n\r\nconst CartIcon = ({numInCart, setNumInCart}) => {\r\n  const [cart, setCart] = useCartState({});\r\n // const [numInCart, setNumInCart] = useState(cart.reduce((n, { quantity }) => n + quantity, 0));\r\n\r\n  let showCart = true;\r\n  console.log(\"in cartIcon, numincart is: \", numInCart);\r\n\r\n  // old version using useState / useReducer / useEffect -\r\n  // cart data doesn't re-render automatically on change\r\n  //const [cartNumItems, setNumItems] = useState(0);\r\n  // const [cartNumItems, setCartNumItems] = useReducer((prev, cur) => {\r\n  //   localStorage.setItem(\"cartQty\", JSON.stringify(cur));\r\n  //   return cur;\r\n  // }, JSON.parse(localStorage.getItem(\"cartQty\")));\r\n\r\n  /*  const [cartNumItems, setCartNumItems] = useReducer((prev, cur) => {\r\n    localStorage.getItem(\"cartQty\", JSON.stringify(cur));\r\n    return cur;\r\n    //localStorage.getItem(\"cartArray\", JSON.stringify(cur));\r\n    //return cur.length;\r\n  }, JSON.parse(localStorage.getItem(\"cartArray\")));*/\r\n\r\n  // see google on \"localstorage dependency in useeffect\"\r\n  // useEffect(() => {\r\n  //   setCartNumItems(localStorage.getItem(\"cartQty\"));\r\n  // }, localStorage);\r\n\r\n  console.log(\"show val now is \", showCart);\r\n\r\n  const showCartFn = () => {\r\n    showCart = !showCart;\r\n    alert(\" showcart val now is \", showCart);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cartWindow\">\r\n      <div className=\"cartContainer hvr-skew-forward\">\r\n        <img\r\n          className=\"cartIcon \"\r\n          src={cartIcon}\r\n          alt=\"Shopping cart icon\"\r\n          onClick={(e) => {\r\n            showCartFn();\r\n          }}\r\n        />\r\n        {cart.length > 0 && (\r\n          <div>\r\n            <div className=\"numCartItemsDisplay\">\r\n              {cart.reduce((n, { quantity }) => n + quantity, 0)}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {cart.length > 0 && showCart && <CartDisplayContents numInCart={numInCart} setNumInCart={setNumInCart}/>}\r\n    </div>\r\n  );\r\n};\r\nexport default CartIcon;\r\n\r\n/*onClick={(e) => {\r\n            setShowCart(true);\r\n          }}*/\r\n/* onClick={alert} */\r\n\r\n// old code to access localstorage, before installing the use-persisted-state\r\n/* <div>\r\n            <div className=\"numCartItemsDisplay\">\r\n              {localStorage.getItem(\"cartQty\")}\r\n            </div>\r\n          </div> */\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\ChangeUser\\ChangeUser.js",["157"],"import React, { useContext } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\nconst ChangeUser = () => {\r\n  const { user, toggleUser } = useContext(UserContext);\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <button\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.foreground,\r\n      }}\r\n      onClick={toggleUser}\r\n    >\r\n      {user.name === \"Admin\" && <div>Login as Guest</div>}\r\n      {user.name === \"Guest\" && <div>Login as Admin</div>}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ChangeUser;\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\SearchKeyword\\SearchKeyword.js",[],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\SaleCountdown\\SaleCountdown.js",["158"],"import React, { useEffect, useRef, useContext } from \"react\";\r\nimport \"./SaleCountdown.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\n/* this component is called by the Header component *\r\n\r\n/* counts down by seconds the time left until the end of the sale,\r\nand sets state of display message depending on whether the sale has finished */\r\n\r\nconst SaleCountdown = (props) => {\r\n  const { secondsLeft, setSecondsLeft, isSale, setSale } = props;\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const convertToDHMS = () => {\r\n    let temp = \"\";\r\n    if (secondsLeft) {\r\n      temp = `\r\n      ${Math.floor(secondsLeft / (60 * 60 * 24))}:${Math.floor(\r\n        (secondsLeft / (60 * 60)) % 24\r\n      )}:`;\r\n      temp = `${temp}${Math.floor((secondsLeft / 60) % 60)}:${Math.floor(\r\n        secondsLeft % 60\r\n      )}`;\r\n      return temp;\r\n    }\r\n  };\r\n\r\n  /************************************ */\r\n  /* version using setTimeout.\r\n  /************************************ */\r\n  /*without the use of useRef, we could not use setInterval here, as it causes an infinite loop! \r\n  /* Each time the state of DHMSLeft is updated, useEffect sets a 1 second timeout.\r\n  At the end of the timeout, the state of the DHMSLeft and secondsLeft update, and so the useEffect runs again,\r\n  and sets another 1 second timeout.\r\n  If the secondsLeft reaches zero\r\n \r\n  useEffect(() => {\r\n    const countdown = setTimeout(() => {\r\n      if (secondsLeft) {\r\n        setSecondsLeft(secondsLeft - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(countdown);\r\n    */\r\n\r\n  /************************************ */\r\n  /* version using setInterval - needs to use useRef.\r\n  /************************************ */\r\n  const intervalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      if (secondsLeft) {\r\n        setSecondsLeft(secondsLeft - 1);\r\n        console.log(\"counting down, secs:\", secondsLeft);\r\n        setSale(\"true\");\r\n      } else {\r\n        setSale(\"false\");\r\n      }\r\n    }, 1000);\r\n\r\n    //use useRef to create a mutable ref object from the setTimeout identifier (\"countdown\").\r\n    // This lets the timeout id be accessible from the whole component.\r\n    // If we stored the id in a state variable, the component would be re-rendered\r\n    // after the state update so a new interval will be created, creating an infinite loop.\r\n    intervalRef.current = countdown;\r\n\r\n    /********************** */\r\n    /* EXPLANATION:          */\r\n    /********************** */\r\n    /* the intervalRef's current value is updated if starting a new countdown, \r\n    but the intervalRef itself stays fixed in the DOM and doesn't re-render when there's a change in \r\n    state of the secondsLeft variable\r\n    This how the infinite loop is prevented.\r\n    */\r\n\r\n    // Clear timeout if the component is unmounted\r\n    return () => clearTimeout(countdown);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [secondsLeft]);\r\n  //The return will runs each time useEffect finishes the timeout except for the first time\r\n  // and clears the timeout if the component is unmounted\r\n\r\n  const saleMessage = () => {\r\n    return secondsLeft\r\n      ? `10% off!! ${convertToDHMS(\r\n          secondsLeft\r\n        )} days left until the end of the Sale`\r\n      : \"Sale over\";\r\n  };\r\n\r\n  return (\r\n    <div style={{ color: theme.foreground, background: theme.background }}>\r\n      <h2 id=\"message\">{saleMessage()} </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nSaleCountdown.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  setSecondsLeft: PropTypes.func,\r\n};\r\n\r\nexport default SaleCountdown;\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\CategorySelect\\CategorySelect.js",[],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\ProductDisplayClass\\ProductDisplayClass.js",["159","160","161","162","163"],"import React, { useContext } from \"react\";\r\nimport \"./ProductDisplayClass.css\";\r\nimport PropTypes from \"prop-types\";\r\n//import saleIcon from \"../icons/sale.png\";\r\nimport SaleContext, { sales } from \"../../contexts/SaleContexts\";\r\n//import ProductInfo from \"../../pages/ProductInfo/ProductInfo\";\r\nimport ThemeContext, { themes } from \"../../contexts/ThemeContexts\";\r\n\r\n/* this component is called from the Products class.\r\n   It renders individual products cards (product title, image, price).\r\n   If the product is a sale item, its title and sale price are colored until the sale ends \r\n   */\r\n\r\nconst ProductDisplayClass = (props) => {\r\n  const {\r\n    secondsLeft,\r\n    selectedCategory,\r\n    title,\r\n    image,\r\n    price,\r\n    productid,\r\n    category,\r\n    onSale,\r\n    saleReductionPercent,\r\n    isSale,\r\n    quantityInStock,\r\n    priceRange,\r\n  } = props;\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n  const { sale } = useContext(SaleContext);\r\n\r\n  // const newPrice =\r\n  //   onSale && sale.isSale ? ` Sale: $ ${+(price * 0.9).toFixed(2)}` : \"\";\r\n\r\n  const newPrice = onSale\r\n    ? ` Sale: $ ${+((price * (100 - saleReductionPercent)) / 100).toFixed(2)}`\r\n    : \"\";\r\n\r\n  /* renders an individual product card, containing product information and image.\r\n  the information an image are obtained from the props which are passed from the ProductsContainerClass */\r\n\r\n  return (\r\n    (!selectedCategory || category === selectedCategory) &&\r\n    price < priceRange[1] &&\r\n    price > priceRange[0] && (\r\n      <div\r\n        className=\" hvr-shutter-out-vertical\"\r\n        style={{ color: theme.foreground, background: \"white\" }}\r\n      >\r\n        <div className=\"product-info\">\r\n          {onSale && <div className=\"product-banner-sale\">SALE</div>}\r\n          {!onSale && <div className=\"product-banner-nosale\"></div>}\r\n          <h6\r\n            style={{\r\n              color: onSale ? theme.salePriceColor : \"black\",\r\n            }}\r\n          >\r\n            {title}\r\n          </h6>\r\n        </div>\r\n        <div className=\"product-image\">\r\n          <img src={image} alt={\"\"} />\r\n        </div>\r\n        <div className=\"product-info\">\r\n          <h5>$ {price}</h5>\r\n          <h5\r\n            style={{\r\n              color: theme.salePriceColor,\r\n              display: newPrice && secondsLeft ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            {saleReductionPercent}% off! {newPrice}\r\n          </h5>\r\n          <h5>{quantityInStock} in stock</h5>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nProductDisplayClass.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  color: PropTypes.string,\r\n  price: PropTypes.number,\r\n  selectedCategory: PropTypes.string,\r\n  title: PropTypes.string,\r\n  image: PropTypes.string,\r\n  salesProductsIds: PropTypes.arrayOf(PropTypes.number),\r\n  category: PropTypes.string,\r\n  quantityInStock: PropTypes.number,\r\n  onSale: PropTypes.bool,\r\n};\r\n\r\nexport default ProductDisplayClass;\r\n\r\n/* version with sale icon:\r\n<div className=\"product-info\">\r\n          {onSale && <img src={saleIcon} alt=\"sale item\"></img>}\r\n          <h6\r\n            style={{\r\n              color: onSale ? theme.salePriceColor : \"black\",\r\n            }}\r\n          >\r\n            {title}\r\n          </h6>\r\n        </div> */\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\SliderFilterPrice\\SliderFilterPrice.js",["164"],"import React, { useEffect, useContext } from \"react\";\r\n// need to install and design: npm install antd\r\nimport { Slider } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport ThemeContext, { currentTheme } from \"../../contexts/ThemeContexts\";\r\n\r\nconst SliderFilterPrice = (props) => {\r\n  const { priceRange, setPriceRange, products } = props;\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  useEffect(() => {\r\n    if (products.length) {\r\n      console.log(\"prods are \", products);\r\n      let max = 0;\r\n      for (let i = 0; i < products.length; i++) {\r\n        max = products[i].price > max ? products[i].price : max;\r\n        console.log(\"max: \", max);\r\n      }\r\n      setPriceRange([0, max + 5]);\r\n      console.log(\"max price is: \", max);\r\n    }\r\n  }, [products, setPriceRange]);\r\n\r\n  //const [disabled] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ color: theme.foreground, background: theme.background }}>\r\n        Select Price range:\r\n      </div>\r\n      <Slider\r\n        range\r\n        defaultValue={[0, 1000]}\r\n        min={0}\r\n        max={1000}\r\n        value={priceRange}\r\n        onChange={setPriceRange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SliderFilterPrice;\r\n\r\n/*\r\n /* {\r\n    Object.keys(groupBy(products, \"price\")).map((price) => price);\r\n  }*/\r\n\r\n// useEffect(() => {\r\n/* setPriceRange(() => [\r\n      0,\r\n      Math.max(\r\n        ...products.map(\r\n          (product) => product.price.map((o) => o.y).map((o) => o.y),\r\n          0\r\n        )\r\n      ),\r\n    ]);*/\r\n//products.map((product) => product.price.map((o) => console.log(o)));\r\n/*console.log(\r\n      \"max: \",\r\n      Math.max(...products.map((product) => product.price), 0)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n // }, []);\r\n  // const maxValueOfY = Math.max(...arrayToSearchIn.map(o => o.y), 0);\r\n*/\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\ListCategories\\ListCategories.js",[],"C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\CartDisplayContents\\CartDisplayContents.js",["165"],"import React, { useContext } from \"react\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\nimport CartItem from \"../CartItem/CartItem\";\r\n\r\n// old version before installing use-persisted-state:\r\n//import \"../storagetools/LocalStorageArrayTools.js\";\r\nimport createPersistedState from \"use-persisted-state\";\r\n\r\nimport \"./CartDisplayContents.css\";\r\n\r\nconst useCartState = createPersistedState(\"cart\");\r\n\r\nconst CartDisplayContents = ({numInCart, setNumInCart}) => {\r\n  const { theme } = useContext(ThemeContext);\r\n  //const cartItemsArray = JSON.parse(localStorage.getItem(\"cartArray\"));\r\n  const [cart, setCart] = useCartState({});\r\n\r\n  return (\r\n    <div>\r\n      {cart.length > 0 && (\r\n        <div\r\n          className=\"shoppingList\"\r\n          style={{\r\n            background: theme.listBackground,\r\n          }}\r\n        >\r\n          {cart.map((item, i) => (\r\n            <CartItem item={item} key={i} numInCart={numInCart} setNumInCart={setNumInCart}/>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartDisplayContents;\r\n\r\n// old version of displaying cart from localStorage,\r\n// before installing use-persisted-state:\r\n/*\r\nconst CartDisplayContents = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const cartItemsArray = JSON.parse(localStorage.getItem(\"cartArray\"));\r\n  console.log(cartItemsArray);\r\n  return (\r\n    <div>\r\n      {cartItemsArray != null && cartItemsArray.length > 0 && (\r\n        <div\r\n          className=\"shoppingList\"\r\n          style={{\r\n            background: theme.listBackground,\r\n          }}\r\n        >\r\n          {cartItemsArray.map((item, i) => (\r\n            <CartItem item={item} key={i} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n    */\r\n","C:\\Users\\haval\\dev\\online-shop\\gocodeshop-server\\client\\src\\components\\CartItem\\CartItem.js",["166","167","168"],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":37,"column":10,"nodeType":"175","messageId":"176","endLine":37,"endColumn":19},{"ruleId":"173","severity":1,"message":"177","line":37,"column":21,"nodeType":"175","messageId":"176","endLine":37,"endColumn":33},{"ruleId":"173","severity":1,"message":"178","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":20},{"ruleId":"173","severity":1,"message":"179","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":19},{"ruleId":"173","severity":1,"message":"180","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":19},{"ruleId":"173","severity":1,"message":"181","line":4,"column":23,"nodeType":"175","messageId":"176","endLine":4,"endColumn":28},{"ruleId":"173","severity":1,"message":"182","line":18,"column":17,"nodeType":"175","messageId":"176","endLine":18,"endColumn":27},{"ruleId":"173","severity":1,"message":"183","line":6,"column":24,"nodeType":"175","messageId":"176","endLine":6,"endColumn":30},{"ruleId":"173","severity":1,"message":"181","line":7,"column":23,"nodeType":"175","messageId":"176","endLine":7,"endColumn":28},{"ruleId":"173","severity":1,"message":"182","line":38,"column":17,"nodeType":"175","messageId":"176","endLine":38,"endColumn":27},{"ruleId":"173","severity":1,"message":"184","line":40,"column":11,"nodeType":"175","messageId":"176","endLine":40,"endColumn":15},{"ruleId":"173","severity":1,"message":"185","line":43,"column":30,"nodeType":"175","messageId":"176","endLine":43,"endColumn":45},{"ruleId":"173","severity":1,"message":"186","line":49,"column":10,"nodeType":"175","messageId":"176","endLine":49,"endColumn":19},{"ruleId":"173","severity":1,"message":"187","line":52,"column":22,"nodeType":"175","messageId":"176","endLine":52,"endColumn":28},{"ruleId":"173","severity":1,"message":"188","line":87,"column":13,"nodeType":"175","messageId":"176","endLine":87,"endColumn":19},{"ruleId":"173","severity":1,"message":"189","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":14},{"ruleId":"173","severity":1,"message":"190","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":16},{"ruleId":"173","severity":1,"message":"181","line":10,"column":23,"nodeType":"175","messageId":"176","endLine":10,"endColumn":28},{"ruleId":"173","severity":1,"message":"191","line":18,"column":10,"nodeType":"175","messageId":"176","endLine":18,"endColumn":15},{"ruleId":"173","severity":1,"message":"192","line":19,"column":10,"nodeType":"175","messageId":"176","endLine":19,"endColumn":21},{"ruleId":"173","severity":1,"message":"193","line":19,"column":23,"nodeType":"175","messageId":"176","endLine":19,"endColumn":37},{"ruleId":"173","severity":1,"message":"194","line":20,"column":10,"nodeType":"175","messageId":"176","endLine":20,"endColumn":26},{"ruleId":"173","severity":1,"message":"184","line":33,"column":11,"nodeType":"175","messageId":"176","endLine":33,"endColumn":15},{"ruleId":"173","severity":1,"message":"195","line":46,"column":9,"nodeType":"175","messageId":"176","endLine":46,"endColumn":28},{"ruleId":"173","severity":1,"message":"196","line":50,"column":9,"nodeType":"175","messageId":"176","endLine":50,"endColumn":26},{"ruleId":"173","severity":1,"message":"197","line":1,"column":29,"nodeType":"175","messageId":"176","endLine":1,"endColumn":37},{"ruleId":"173","severity":1,"message":"198","line":1,"column":39,"nodeType":"175","messageId":"176","endLine":1,"endColumn":48},{"ruleId":"173","severity":1,"message":"182","line":7,"column":17,"nodeType":"175","messageId":"176","endLine":7,"endColumn":27},{"ruleId":"173","severity":1,"message":"199","line":8,"column":11,"nodeType":"175","messageId":"176","endLine":8,"endColumn":16},{"ruleId":"173","severity":1,"message":"200","line":8,"column":18,"nodeType":"175","messageId":"176","endLine":8,"endColumn":29},{"ruleId":"173","severity":1,"message":"182","line":30,"column":17,"nodeType":"175","messageId":"176","endLine":30,"endColumn":27},{"ruleId":"173","severity":1,"message":"201","line":32,"column":16,"nodeType":"175","messageId":"176","endLine":32,"endColumn":23},{"ruleId":"173","severity":1,"message":"197","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"198","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"202","line":1,"column":38,"nodeType":"175","messageId":"176","endLine":1,"endColumn":48},{"ruleId":"173","severity":1,"message":"201","line":16,"column":16,"nodeType":"175","messageId":"176","endLine":16,"endColumn":23},{"ruleId":"173","severity":1,"message":"200","line":7,"column":18,"nodeType":"175","messageId":"176","endLine":7,"endColumn":29},{"ruleId":"173","severity":1,"message":"203","line":12,"column":40,"nodeType":"175","messageId":"176","endLine":12,"endColumn":46},{"ruleId":"173","severity":1,"message":"181","line":5,"column":23,"nodeType":"175","messageId":"176","endLine":5,"endColumn":28},{"ruleId":"173","severity":1,"message":"183","line":7,"column":24,"nodeType":"175","messageId":"176","endLine":7,"endColumn":30},{"ruleId":"173","severity":1,"message":"204","line":21,"column":5,"nodeType":"175","messageId":"176","endLine":21,"endColumn":14},{"ruleId":"173","severity":1,"message":"203","line":25,"column":5,"nodeType":"175","messageId":"176","endLine":25,"endColumn":11},{"ruleId":"173","severity":1,"message":"184","line":31,"column":11,"nodeType":"175","messageId":"176","endLine":31,"endColumn":15},{"ruleId":"173","severity":1,"message":"205","line":5,"column":24,"nodeType":"175","messageId":"176","endLine":5,"endColumn":36},{"ruleId":"173","severity":1,"message":"201","line":16,"column":16,"nodeType":"175","messageId":"176","endLine":16,"endColumn":23},{"ruleId":"173","severity":1,"message":"206","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":16},{"ruleId":"173","severity":1,"message":"199","line":16,"column":11,"nodeType":"175","messageId":"176","endLine":16,"endColumn":16},{"ruleId":"173","severity":1,"message":"200","line":16,"column":18,"nodeType":"175","messageId":"176","endLine":16,"endColumn":29},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'numInCart' is assigned a value but never used.","Identifier","unusedVar","'setNumInCart' is assigned a value but never used.","'withRouter' is defined but never used.","'DisplayUser' is defined but never used.","'SaleContext' is defined but never used.","'sales' is defined but never used.","'toggleUser' is assigned a value but never used.","'themes' is defined but never used.","'sale' is assigned a value but never used.","'setFieldsFilled' is assigned a value but never used.","'productId' is assigned a value but never used.","'setURL' is assigned a value but never used.","'result' is assigned a value but never used.","'Header' is defined but never used.","'Products' is defined but never used.","'color' is assigned a value but never used.","'secondsLeft' is assigned a value but never used.","'setSecondsLeft' is assigned a value but never used.","'salesProductsIds' is assigned a value but never used.","'addButtonLabelStyle' is assigned a value but never used.","'checkFieldsFilled' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'theme' is assigned a value but never used.","'toggleTheme' is assigned a value but never used.","'setCart' is assigned a value but never used.","'useReducer' is defined but never used.","'isSale' is assigned a value but never used.","'productid' is assigned a value but never used.","'currentTheme' is defined but never used.","'editIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]