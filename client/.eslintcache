[{"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\index.js":"1","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\reportWebVitals.js":"2","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\App.js":"3","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\ThemeContexts.js":"4","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Home\\Home.js":"5","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\ProductInfo\\ProductInfo.js":"6","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\About\\About.js":"7","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Admin\\Admin.js":"8","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Header\\Header.js":"9","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Products\\Products.js":"10","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CategorySelect\\CategorySelect.js":"11","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SaleCountdown\\SaleCountdown.js":"12","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeThemeColors\\ChangeThemeColors.js":"13","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SliderFilterPrice\\SliderFilterPrice.js":"14","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SearchKeyword\\SearchKeyword.js":"15","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ProductDisplayClass\\ProductDisplayClass.js":"16","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ListCategories\\ListCategories.js":"17","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\UserContexts.js":"18","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\DisplayUser\\DisplayUser.js":"19","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeUser\\ChangeUser.js":"20"},{"size":517,"mtime":1615478320063,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1615478320086,"results":"23","hashOfConfig":"22"},{"size":5634,"mtime":1615670022336,"results":"24","hashOfConfig":"22"},{"size":358,"mtime":1615478320056,"results":"25","hashOfConfig":"22"},{"size":2277,"mtime":1615670435261,"results":"26","hashOfConfig":"22"},{"size":2821,"mtime":1615671188392,"results":"27","hashOfConfig":"22"},{"size":293,"mtime":1615478320070,"results":"28","hashOfConfig":"22"},{"size":3832,"mtime":1615666417897,"results":"29","hashOfConfig":"22"},{"size":2636,"mtime":1615478320019,"results":"30","hashOfConfig":"22"},{"size":2214,"mtime":1615478320040,"results":"31","hashOfConfig":"22"},{"size":1451,"mtime":1615478320010,"results":"32","hashOfConfig":"22"},{"size":3656,"mtime":1615478320046,"results":"33","hashOfConfig":"22"},{"size":480,"mtime":1615478320013,"results":"34","hashOfConfig":"22"},{"size":1810,"mtime":1615478320054,"results":"35","hashOfConfig":"22"},{"size":1907,"mtime":1615478320050,"results":"36","hashOfConfig":"22"},{"size":4692,"mtime":1615478320030,"results":"37","hashOfConfig":"22"},{"size":1942,"mtime":1615478320025,"results":"38","hashOfConfig":"22"},{"size":339,"mtime":1615668286879,"results":"39","hashOfConfig":"22"},{"size":519,"mtime":1615670242682,"results":"40","hashOfConfig":"22"},{"size":580,"mtime":1615668370385,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"x7ueor",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\index.js",[],["92","93"],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\reportWebVitals.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\App.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\ThemeContexts.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Home\\Home.js",["94"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport DisplayUser from \"../../components/DisplayUser/DisplayUser\";\r\n\r\n//components of content:\r\nimport Header from \"../../components/Header/Header\";\r\nimport Products from \"../../components/Products/Products\";\r\n\r\nconst Home = () => {\r\n  const [color] = useState(\"red\");\r\n  const [secondsLeft, setSecondsLeft] = useState(65);\r\n  const [salesProductsIds] = useState([1, 3, 5, 6]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [isSale, setSale] = useState(\"true\");\r\n  const [priceRange, setPriceRange] = useState([0, 200]);\r\n  const [searchKeyword, setSearch] = useState(\"\");\r\n  const [numProducts, setNumProds] = useState(\"\");\r\n\r\n  // fetching from my server on localhost at 192.168.43.81 on port 8000:\r\n  /*useEffect(() => {\r\n    fetch(\"http://192.168.43.81:8000/products.json\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n      });\r\n    console.log(\"fetched \");\r\n  }, []);\r\n  */\r\n  /* mongoose:\r\n fetch(\"http://10.0.0.193:8000/products\")\r\n */\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/products\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n      });\r\n    console.log(\"fetched \");\r\n    setNumProds(products.length);\r\n  }, [products.length]);\r\n\r\n  return (\r\n    <div>\r\n      <DisplayUser />\r\n      <div>Num products in shop: {numProducts}</div>\r\n      <Header\r\n        selectedCategory={selectedCategory}\r\n        setSelectedCategory={setSelectedCategory}\r\n        secondsLeft={secondsLeft}\r\n        setSecondsLeft={setSecondsLeft}\r\n        products={products}\r\n        setProducts={setProducts}\r\n        isSale={isSale}\r\n        setSale={setSale}\r\n        priceRange={priceRange}\r\n        setPriceRange={setPriceRange}\r\n        searchKeyword={searchKeyword}\r\n        setSearch={setSearch}\r\n      ></Header>\r\n      <Products\r\n        color={color}\r\n        secondsLeft={secondsLeft}\r\n        salesProductsIds={salesProductsIds}\r\n        selectedCategory={selectedCategory}\r\n        products={products}\r\n        isSale={isSale}\r\n        priceRange={priceRange}\r\n      ></Products>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n/*\r\n */\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\ProductInfo\\ProductInfo.js",["95"],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\About\\About.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Admin\\Admin.js",["96","97","98","99","100","101","102","103","104"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Link from \"react-router-dom\";\r\n\r\n//components of content:\r\nimport Header from \"../../components/Header/Header\";\r\nimport Products from \"../../components/Products/Products\";\r\n//import SearchKeyword from \"../SearchKeyword/SearchKeyword\";\r\nimport CategorySelectAdmin from \"../../components/CategorySelectAdmin/CategorySelectAdmin\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\nconst Admin = () => {\r\n  const [color] = useState(\"red\");\r\n  const [secondsLeft, setSecondsLeft] = useState(65);\r\n  const [salesProductsIds] = useState([1, 3, 5, 6]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [isSale, setSale] = useState(\"true\");\r\n  const [productName, setName] = useState(\"\");\r\n  const [productDescription, setDescription] = useState(\"\");\r\n  const [productURL, setURL] = useState(\"\");\r\n  const [productPrice, setPrice] = useState(\"\");\r\n\r\n  const [theme] = useContext(ThemeContext);\r\n\r\n  console.log(\"theme\", theme);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/products\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n      });\r\n    console.log(\"fetched \");\r\n  }, []);\r\n\r\n  const addProduct = async (title, description, price, category, url) => {\r\n    console.log(\"in add product in client\");\r\n    const res = await fetch(\"/api/products\", {\r\n      method: \"POST\", // or 'PUT'\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ title: title, description, price, category, url }),\r\n    });\r\n\r\n    const product = await res.json();\r\n\r\n    console.log(\"adding product \", product);\r\n\r\n    setProducts([products, ...products]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ background: theme.background }}>\r\n      <div>Input name of new product:</div>\r\n      <input\r\n        id=\"productName\"\r\n        value={productName}\r\n        onChange={(e) => setName(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      <div>Input description of new product:</div>\r\n      <input\r\n        id=\"productDescription\"\r\n        value={productDescription}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      <div>Input image URL of new product:</div>\r\n      <input\r\n        id=\"productURL\"\r\n        value={productURL}\r\n        onChange={(e) => setURL(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      <div>Input price of new product:</div>\r\n      <input\r\n        id=\"productPrice\"\r\n        value={productPrice}\r\n        onChange={(e) => setPrice(e.target.value)}\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n      />\r\n      {products.length > 0 && (\r\n        <CategorySelectAdmin\r\n          selectedCategory={selectedCategory}\r\n          setSelectedCategory={setSelectedCategory}\r\n          products={products}\r\n          style={{ color: theme.background, background: theme.foreground }}\r\n        ></CategorySelectAdmin>\r\n      )}\r\n      <button\r\n        id=\"addProductButton\"\r\n        style={{ color: theme.background, background: theme.foreground }}\r\n        onClick={(e) => {\r\n          addProduct(\r\n            productName,\r\n            productDescription,\r\n            productPrice,\r\n            selectedCategory,\r\n            productURL\r\n          );\r\n        }}\r\n      >\r\n        Add new product to store\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n\r\n/*\r\n addProduct(\r\n            productName,\r\n            productDescription,\r\n            productPrice,\r\n            selectedCategory,\r\n            productURL\r\n          );\r\n          */\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Header\\Header.js",["105","106"],"import React, { useContext } from \"react\";\r\nimport SaleCountdown from \"../SaleCountdown/SaleCountdown\";\r\nimport PropTypes from \"prop-types\";\r\nimport CategorySelect from \"../CategorySelect/CategorySelect\";\r\nimport SliderFilterPrice from \"../SliderFilterPrice/SliderFilterPrice\";\r\nimport \"./Header.css\";\r\nimport ChangeThemeColors from \"../ChangeThemeColors/ChangeThemeColors\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\nimport SearchKeyword from \"../SearchKeyword/SearchKeyword\";\r\n\r\nconst Header = (props) => {\r\n  const {\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    secondsLeft,\r\n    setSecondsLeft,\r\n    isSale,\r\n    setSale,\r\n    products,\r\n    setProducts,\r\n    priceRange,\r\n    setPriceRange,\r\n    searchKeyword,\r\n    setSearch,\r\n  } = props;\r\n\r\n  //const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div>\r\n      <ChangeThemeColors />\r\n      <SaleCountdown\r\n        secondsLeft={secondsLeft}\r\n        setSecondsLeft={setSecondsLeft}\r\n        isSale={isSale}\r\n        setSale={setSale}\r\n      ></SaleCountdown>\r\n      {products.length > 0 && (\r\n        <CategorySelect\r\n          selectedCategory={selectedCategory}\r\n          setSelectedCategory={setSelectedCategory}\r\n          products={products}\r\n        ></CategorySelect>\r\n      )}\r\n      {products.length > 0 && (\r\n        <SearchKeyword\r\n          searchKeyword={searchKeyword}\r\n          setSearch={setSearch}\r\n          products={products}\r\n          setProducts={setProducts}\r\n        ></SearchKeyword>\r\n      )}\r\n      <div className=\"price-range\">\r\n        <SliderFilterPrice\r\n          priceRange={priceRange}\r\n          setPriceRange={setPriceRange}\r\n          products={products}\r\n        ></SliderFilterPrice>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  categories: PropTypes.arrayOf(PropTypes.string),\r\n  selectedCategory: PropTypes.string,\r\n  setSelectedCategory: PropTypes.func,\r\n};\r\n/* need to add proptypes of products*/\r\n\r\nexport default Header;\r\n\r\n/*      return (\r\n        <div>\r\n          <h1> App</h1>\r\n          <SaleCountdown\r\n            secondsLeft={secondsLeft}\r\n            setSecondsLeft={setSecondsLeft}\r\n            isSale={isSale}\r\n            setSale={setSale}\r\n          ></SaleCountdown>\r\n          {products.length > 0 && (\r\n            <CategorySelect\r\n              selectedCategory={selectedCategory}\r\n              setSelectedCategory={setSelectedCategory}\r\n              products={products}\r\n            ></CategorySelect>\r\n            <SliderFilterPrice priceRange={priceRange}></SliderFilterPrice}\r\n          )}\r\n        </div>\r\n      );\r\n      */\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Products\\Products.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CategorySelect\\CategorySelect.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SaleCountdown\\SaleCountdown.js",["107"],"import React, { useEffect, useRef, useContext } from \"react\";\r\nimport \"./SaleCountdown.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\n/* this component is called by the Header component *\r\n\r\n/* counts down by seconds the time left until the end of the sale,\r\nand sets state of display message depending on whether the sale has finished */\r\n\r\nconst SaleCountdown = (props) => {\r\n  const { secondsLeft, setSecondsLeft, isSale, setSale } = props;\r\n  const [theme] = useContext(ThemeContext);\r\n\r\n  const convertToDHMS = () => {\r\n    let temp = \"\";\r\n    if (secondsLeft) {\r\n      temp = `\r\n      ${Math.floor(secondsLeft / (60 * 60 * 24))}:${Math.floor(\r\n        (secondsLeft / (60 * 60)) % 24\r\n      )}:`;\r\n      temp = `${temp}${Math.floor((secondsLeft / 60) % 60)}:${Math.floor(\r\n        secondsLeft % 60\r\n      )}`;\r\n      return temp;\r\n    }\r\n  };\r\n\r\n  /************************************ */\r\n  /* version using setTimeout.\r\n  /************************************ */\r\n  /*without the use of useRef, we could not use setInterval here, as it causes an infinite loop! \r\n  /* Each time the state of DHMSLeft is updated, useEffect sets a 1 second timeout.\r\n  At the end of the timeout, the state of the DHMSLeft and secondsLeft update, and so the useEffect runs again,\r\n  and sets another 1 second timeout.\r\n  If the secondsLeft reaches zero\r\n \r\n  useEffect(() => {\r\n    const countdown = setTimeout(() => {\r\n      if (secondsLeft) {\r\n        setSecondsLeft(secondsLeft - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(countdown);\r\n    */\r\n\r\n  /************************************ */\r\n  /* version using setInterval - needs to use useRef.\r\n  /************************************ */\r\n  const intervalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      if (secondsLeft) {\r\n        setSecondsLeft(secondsLeft - 1);\r\n        console.log(\"counting down, secs:\", secondsLeft);\r\n        setSale(\"true\");\r\n      } else {\r\n        setSale(\"false\");\r\n      }\r\n    }, 1000);\r\n\r\n    //use useRef to create a mutable ref object from the setTimeout identifier (\"countdown\").\r\n    // This lets the timeout id be accessible from the whole component.\r\n    // If we stored the id in a state variable, the component would be re-rendered\r\n    // after the state update so a new interval will be created, creating an infinite loop.\r\n    intervalRef.current = countdown;\r\n\r\n    /********************** */\r\n    /* EXPLANATION:          */\r\n    /********************** */\r\n    /* the intervalRef's current value is updated if starting a new countdown, \r\n    but the intervalRef itself stays fixed in the DOM and doesn't re-render when there's a change in \r\n    state of the secondsLeft variable\r\n    This how the infinite loop is prevented.\r\n    */\r\n\r\n    // Clear timeout if the component is unmounted\r\n    return () => clearTimeout(countdown);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [secondsLeft]);\r\n  //The return will runs each time useEffect finishes the timeout except for the first time\r\n  // and clears the timeout if the component is unmounted\r\n\r\n  const saleMessage = () => {\r\n    return secondsLeft\r\n      ? `10% off!! ${convertToDHMS(\r\n          secondsLeft\r\n        )} days left until the end of the Sale`\r\n      : \"Sale over\";\r\n  };\r\n\r\n  return (\r\n    <div style={{ color: theme.foreground, background: theme.background }}>\r\n      <h2 id=\"message\">{saleMessage()} </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nSaleCountdown.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  setSecondsLeft: PropTypes.func,\r\n};\r\n\r\nexport default SaleCountdown;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeThemeColors\\ChangeThemeColors.js",["108","109"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\nconst ChangeThemeColors = () => {\r\n  const [theme, toggleTheme] = useContext(ThemeContext);\r\n\r\n  return (\r\n    <button\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.foreground,\r\n      }}\r\n      onClick={toggleTheme}\r\n    >\r\n      {\" \"}\r\n      Change Theme{\" \"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ChangeThemeColors;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SliderFilterPrice\\SliderFilterPrice.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SearchKeyword\\SearchKeyword.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ProductDisplayClass\\ProductDisplayClass.js",["110"],"import React, { useContext } from \"react\";\r\nimport \"./ProductDisplayClass.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport sale from \"./sale.png\";\r\n//import { Link } from \"react-router-dom\";\r\n//import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport ProductInfo from \"../../pages/ProductInfo/ProductInfo\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\n/* this component is called from the Products class.\r\n   It renders individual products cards (product title, image, price).\r\n   If the product is a sale item, its title and sale price are colored until the sale ends \r\n   */\r\n\r\nconst ProductDisplayClass = (props) => {\r\n  const {\r\n    color,\r\n    secondsLeft,\r\n    salesProductsIds,\r\n    selectedCategory,\r\n    title,\r\n    image,\r\n    price,\r\n    productid,\r\n    category,\r\n    isSale,\r\n    priceRange,\r\n  } = props;\r\n\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const newPrice = salesProductsIds.includes(productid)\r\n    ? ` Sale: $ ${+(price * 0.9).toFixed(2)}`\r\n    : \"\";\r\n\r\n  /* renders an individual product card, containing product information and image.\r\n  the information an image are obtained from the props which are passed from the ProductsContainerClass */\r\n\r\n  return (\r\n    (!selectedCategory || category === selectedCategory) &&\r\n    price < priceRange[1] &&\r\n    price > priceRange[0] && (\r\n      <div\r\n        className=\"product-card\"\r\n        style={{ color: theme.foreground, background: \"white\" }}\r\n      >\r\n        <div className=\"product-info\">\r\n          {newPrice && isSale ? <img src={sale} alt=\"sale item\"></img> : null}\r\n          <h6\r\n            style={{\r\n              color: newPrice && isSale ? color : \"black\",\r\n            }}\r\n          >\r\n            {title}\r\n          </h6>\r\n        </div>\r\n        <div className=\"product-image\">\r\n          <img src={image} alt={\"\"} />\r\n        </div>\r\n        <div className=\"product-info\">\r\n          <h5>$ {price}</h5>\r\n          <h5\r\n            style={{\r\n              color: color,\r\n              display: newPrice && secondsLeft ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            {newPrice}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nProductDisplayClass.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  color: PropTypes.string,\r\n  price: PropTypes.number,\r\n  selectedCategory: PropTypes.string,\r\n  title: PropTypes.string,\r\n  image: PropTypes.string,\r\n  salesProductsIds: PropTypes.arrayOf(PropTypes.number),\r\n  category: PropTypes.string,\r\n};\r\n\r\nexport default ProductDisplayClass;\r\n\r\n/*\r\nreturn (\r\n    (!selectedCategory || category === selectedCategory) && (\r\n      <div className=\"product-card\">\r\n        <Link to={`/ProductInfo/${productid}`}>\r\n          <ProductInfo\r\n            id={productid}\r\n            price={price}\r\n            image={image}\r\n            title={title}\r\n            isSale={secondsLeft}\r\n            newPrice={newPrice ? newPrice : \"\"}\r\n          />\r\n        </Link>\r\n        <div className=\"product-info\">\r\n          {newPrice && secondsLeft ? (\r\n            <img src={sale} alt=\"sale item\"></img>\r\n          ) : null}\r\n          <h6\r\n            style={{\r\n              color: newPrice && secondsLeft ? color : \"black\",\r\n            }}\r\n          >\r\n            {title}\r\n          </h6>\r\n        </div>\r\n        <div className=\"product-image\">\r\n          <img src={image} alt={\"\"} />\r\n        </div>\r\n        <div className=\"product-info\">\r\n          <h5>$ {price}</h5>\r\n          <h5\r\n            style={{\r\n              color: color,\r\n              display: newPrice && secondsLeft ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            {newPrice}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n  */\r\n\r\n/*\r\nimport { Link } from \"react-router-dom\";\r\nimport AddTodo from \"../../components/AddTodo/AddTodo\";\r\nimport Todo from \"../../components/Todo/Todo\";\r\n\r\nconst Home = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    // const check = useRef(\"Hello\");\r\n  \r\n    // let check = \"Hello\";\r\n    useEffect(() => {\r\n      fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n        .then((response) => response.json())\r\n        .then((data) => setTodos(data));\r\n    }, []);\r\n  \r\n    const addTodo = (title) => {\r\n      const newTodo = {\r\n        id: todos.length + 1,\r\n        title,\r\n        userId: 0,\r\n        completed: false,\r\n      };\r\n      setTodos([newTodo, ...todos]);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <AddTodo onAdd={addTodo} />\r\n        {todos.map((todo) => (\r\n          <Link to={`/todos/${todo.id}`} key={todo.id}>\r\n            <Todo id={todo.id} title={todo.title} />\r\n          </Link>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n  \r\n  */\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ListCategories\\ListCategories.js",["111"],"import React, { useEffect } from \"react\";\r\nimport \"./ListCategories.css\";\r\n//import PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\n/*reduce:\r\n *\r\n * array.reduce(function(total, currentValue, currentIndex, arr), initialValue)\r\n *\r\n * xs = name of array\r\n * (rv,x) => arrow fn passed to reduce\r\n * rv = The initialValue, or the previously returned value of the function\r\n *\r\n * The reduce() method reduces the array to a single value.\r\n * The reduce() method executes a provided function for each value of the array (from left-to-right).\r\n * The return value of the function is stored in an accumulator (result/total).\r\n * Note: reduce() does not execute the function for array elements without values.\r\n * Note: This method does not change the original array.\r\n *\r\n * Call this function with xs as the list of products and key as \"category\"\r\n */\r\n\r\nconst groupBy = (xs, key) =>\r\n  xs.reduce((rv, x) => {\r\n    rv[x[key]] = true || [];\r\n    return rv;\r\n  }, {});\r\n\r\nconst ListCategories = (props) => {\r\n  const { products } = props;\r\n\r\n  useEffect(() => {\r\n    console.log(\"In ListC, number of products from props: \", products.length);\r\n  }, [products]);\r\n\r\n  /*\r\n  if (products.length) {\r\n    console.log(\"listing categories\");\r\n    setCategories((products) => Object.keys(groupBy(products, \"category\")));\r\n\r\n    let anothervar = Object.keys(groupBy(products, \"category\"));\r\n\r\n    console.log(\"anothervar:\", anothervar);\r\n    this.setState({\r\n      categories: [\"Select...\", ...anothervar],\r\n    });\r\n    console.log(\"categories: \", categories);\r\n  } else {\r\n    console.log(\"products array empty\");\r\n  }\r\n*/\r\n  return (\r\n    <>\r\n      {Object.keys(groupBy(products, \"category\")).map((category) => (\r\n        <option value={category} key={category}>\r\n          {category}\r\n        </option>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n/*\r\nListCategories.propTypes = {\r\n\r\n};\r\n*/\r\nexport default ListCategories;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\UserContexts.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\DisplayUser\\DisplayUser.js",["112","113","114","115","116"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\nimport ChangeUser from \"../ChangeUser/ChangeUser\";\r\n\r\nconst DisplayUser = () => {\r\n  const [user, toggleUser] = useContext(UserContext);\r\n  const [theme, toggleTheme] = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div>\r\n      <div>Logged in as: {user.name}</div>\r\n      <ChangeUser />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayUser;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeUser\\ChangeUser.js",["117","118","119"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\nconst ChangeUser = () => {\r\n  const [user, toggleUser] = useContext(UserContext);\r\n  const [theme, toggleTheme] = useContext(ThemeContext);\r\n\r\n  return (\r\n    <button\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.foreground,\r\n      }}\r\n      onClick={toggleUser}\r\n    >\r\n      {\" \"}\r\n      Login as: {user.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ChangeUser;\r\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":38,"nodeType":"126","messageId":"127","endLine":1,"endColumn":48},{"ruleId":"124","severity":1,"message":"128","line":26,"column":16,"nodeType":"126","messageId":"127","endLine":26,"endColumn":26},{"ruleId":"124","severity":1,"message":"129","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":12},{"ruleId":"124","severity":1,"message":"130","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":14},{"ruleId":"124","severity":1,"message":"131","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":16},{"ruleId":"124","severity":1,"message":"132","line":12,"column":10,"nodeType":"126","messageId":"127","endLine":12,"endColumn":15},{"ruleId":"124","severity":1,"message":"133","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":21},{"ruleId":"124","severity":1,"message":"134","line":13,"column":23,"nodeType":"126","messageId":"127","endLine":13,"endColumn":37},{"ruleId":"124","severity":1,"message":"135","line":14,"column":10,"nodeType":"126","messageId":"127","endLine":14,"endColumn":26},{"ruleId":"124","severity":1,"message":"136","line":17,"column":10,"nodeType":"126","messageId":"127","endLine":17,"endColumn":16},{"ruleId":"124","severity":1,"message":"137","line":17,"column":18,"nodeType":"126","messageId":"127","endLine":17,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":27},{"ruleId":"124","severity":1,"message":"138","line":8,"column":8,"nodeType":"126","messageId":"127","endLine":8,"endColumn":20},{"ruleId":"124","severity":1,"message":"136","line":12,"column":40,"nodeType":"126","messageId":"127","endLine":12,"endColumn":46},{"ruleId":"124","severity":1,"message":"139","line":1,"column":29,"nodeType":"126","messageId":"127","endLine":1,"endColumn":37},{"ruleId":"124","severity":1,"message":"140","line":1,"column":39,"nodeType":"126","messageId":"127","endLine":1,"endColumn":48},{"ruleId":"124","severity":1,"message":"141","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":19},{"ruleId":"124","severity":1,"message":"138","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":20},{"ruleId":"124","severity":1,"message":"139","line":1,"column":29,"nodeType":"126","messageId":"127","endLine":1,"endColumn":37},{"ruleId":"124","severity":1,"message":"140","line":1,"column":39,"nodeType":"126","messageId":"127","endLine":1,"endColumn":48},{"ruleId":"124","severity":1,"message":"128","line":7,"column":16,"nodeType":"126","messageId":"127","endLine":7,"endColumn":26},{"ruleId":"124","severity":1,"message":"142","line":8,"column":10,"nodeType":"126","messageId":"127","endLine":8,"endColumn":15},{"ruleId":"124","severity":1,"message":"143","line":8,"column":17,"nodeType":"126","messageId":"127","endLine":8,"endColumn":28},{"ruleId":"124","severity":1,"message":"139","line":1,"column":29,"nodeType":"126","messageId":"127","endLine":1,"endColumn":37},{"ruleId":"124","severity":1,"message":"140","line":1,"column":39,"nodeType":"126","messageId":"127","endLine":1,"endColumn":48},{"ruleId":"124","severity":1,"message":"143","line":7,"column":17,"nodeType":"126","messageId":"127","endLine":7,"endColumn":28},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'toggleUser' is assigned a value but never used.","'Link' is defined but never used.","'Header' is defined but never used.","'Products' is defined but never used.","'color' is assigned a value but never used.","'secondsLeft' is assigned a value but never used.","'setSecondsLeft' is assigned a value but never used.","'salesProductsIds' is assigned a value but never used.","'isSale' is assigned a value but never used.","'setSale' is assigned a value but never used.","'ThemeContext' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ProductInfo' is defined but never used.","'theme' is assigned a value but never used.","'toggleTheme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]