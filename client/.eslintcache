[{"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\index.js":"1","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\reportWebVitals.js":"2","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\App.js":"3","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\ThemeContexts.js":"4","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Home\\Home.js":"5","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\ProductInfo\\ProductInfo.js":"6","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\About\\About.js":"7","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Admin\\Admin.js":"8","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Header\\Header.js":"9","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Products\\Products.js":"10","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CategorySelect\\CategorySelect.js":"11","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SaleCountdown\\SaleCountdown.js":"12","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeThemeColors\\ChangeThemeColors.js":"13","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SliderFilterPrice\\SliderFilterPrice.js":"14","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SearchKeyword\\SearchKeyword.js":"15","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ProductDisplayClass\\ProductDisplayClass.js":"16","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ListCategories\\ListCategories.js":"17","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\UserContexts.js":"18","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\DisplayUser\\DisplayUser.js":"19","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeUser\\ChangeUser.js":"20","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CategorySelectAdmin\\CategorySelectAdmin.js":"21","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\storagetools\\LocalStorageArrayTools.js":"22"},{"size":517,"mtime":1615478320063,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1615478320086,"results":"25","hashOfConfig":"24"},{"size":3446,"mtime":1615833718831,"results":"26","hashOfConfig":"24"},{"size":358,"mtime":1615478320056,"results":"27","hashOfConfig":"24"},{"size":2254,"mtime":1615671721397,"results":"28","hashOfConfig":"24"},{"size":4100,"mtime":1615835988180,"results":"29","hashOfConfig":"24"},{"size":293,"mtime":1615478320070,"results":"30","hashOfConfig":"24"},{"size":3792,"mtime":1615862202795,"results":"31","hashOfConfig":"24"},{"size":2607,"mtime":1615671764767,"results":"32","hashOfConfig":"24"},{"size":2285,"mtime":1615744932283,"results":"33","hashOfConfig":"24"},{"size":1453,"mtime":1615736895439,"results":"34","hashOfConfig":"24"},{"size":3658,"mtime":1615736895401,"results":"35","hashOfConfig":"24"},{"size":464,"mtime":1615737129258,"results":"36","hashOfConfig":"24"},{"size":1818,"mtime":1615736895399,"results":"37","hashOfConfig":"24"},{"size":1909,"mtime":1615736895401,"results":"38","hashOfConfig":"24"},{"size":4844,"mtime":1615745070321,"results":"39","hashOfConfig":"24"},{"size":1942,"mtime":1615478320025,"results":"40","hashOfConfig":"24"},{"size":339,"mtime":1615668286879,"results":"41","hashOfConfig":"24"},{"size":523,"mtime":1615736895400,"results":"42","hashOfConfig":"24"},{"size":662,"mtime":1615737165527,"results":"43","hashOfConfig":"24"},{"size":1763,"mtime":1615738668586,"results":"44","hashOfConfig":"24"},{"size":1112,"mtime":1615835500104,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"2lzu8r",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\index.js",[],["100","101"],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\reportWebVitals.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\App.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\ThemeContexts.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Home\\Home.js",["102","103"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport DisplayUser from \"../../components/DisplayUser/DisplayUser\";\r\n\r\n//components of content:\r\nimport Header from \"../../components/Header/Header\";\r\nimport Products from \"../../components/Products/Products\";\r\n\r\nconst Home = () => {\r\n  const [color] = useState(\"red\");\r\n  const [secondsLeft, setSecondsLeft] = useState(65);\r\n  const [salesProductsIds] = useState([1, 3, 5, 6]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [isSale, setSale] = useState(\"true\");\r\n  const [priceRange, setPriceRange] = useState([0, 200]);\r\n  const [searchKeyword, setSearch] = useState(\"\");\r\n  const [numProducts, setNumProds] = useState(\"\");\r\n\r\n  // fetching from my server on localhost at 192.168.43.81 on port 8000:\r\n  /*useEffect(() => {\r\n    fetch(\"http://192.168.43.81:8000/products.json\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n      });\r\n    console.log(\"fetched \");\r\n  }, []);\r\n  */\r\n  /* mongoose:\r\n fetch(\"http://10.0.0.193:8000/products\")\r\n */\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/products\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n      });\r\n    console.log(\"fetched \");\r\n    setNumProds(products.length);\r\n  }, [products.length]);\r\n\r\n  return (\r\n    <div>\r\n      <div>Num products in shop: {numProducts}</div>\r\n      <Header\r\n        selectedCategory={selectedCategory}\r\n        setSelectedCategory={setSelectedCategory}\r\n        secondsLeft={secondsLeft}\r\n        setSecondsLeft={setSecondsLeft}\r\n        products={products}\r\n        setProducts={setProducts}\r\n        isSale={isSale}\r\n        setSale={setSale}\r\n        priceRange={priceRange}\r\n        setPriceRange={setPriceRange}\r\n        searchKeyword={searchKeyword}\r\n        setSearch={setSearch}\r\n      ></Header>\r\n      <Products\r\n        color={color}\r\n        secondsLeft={secondsLeft}\r\n        salesProductsIds={salesProductsIds}\r\n        selectedCategory={selectedCategory}\r\n        products={products}\r\n        isSale={isSale}\r\n        priceRange={priceRange}\r\n      ></Products>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n/*\r\n */\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\ProductInfo\\ProductInfo.js",["104","105"],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\About\\About.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\pages\\Admin\\Admin.js",["106","107","108","109","110","111","112","113","114"],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Header\\Header.js",["115","116","117"],"import React, { useContext } from \"react\";\r\nimport SaleCountdown from \"../SaleCountdown/SaleCountdown\";\r\nimport PropTypes from \"prop-types\";\r\nimport CategorySelect from \"../CategorySelect/CategorySelect\";\r\nimport SliderFilterPrice from \"../SliderFilterPrice/SliderFilterPrice\";\r\nimport \"./Header.css\";\r\nimport ChangeThemeColors from \"../ChangeThemeColors/ChangeThemeColors\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\nimport SearchKeyword from \"../SearchKeyword/SearchKeyword\";\r\n\r\nconst Header = (props) => {\r\n  const {\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    secondsLeft,\r\n    setSecondsLeft,\r\n    isSale,\r\n    setSale,\r\n    products,\r\n    setProducts,\r\n    priceRange,\r\n    setPriceRange,\r\n    searchKeyword,\r\n    setSearch,\r\n  } = props;\r\n\r\n  //const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div>\r\n      <SaleCountdown\r\n        secondsLeft={secondsLeft}\r\n        setSecondsLeft={setSecondsLeft}\r\n        isSale={isSale}\r\n        setSale={setSale}\r\n      ></SaleCountdown>\r\n      {products.length > 0 && (\r\n        <CategorySelect\r\n          selectedCategory={selectedCategory}\r\n          setSelectedCategory={setSelectedCategory}\r\n          products={products}\r\n        ></CategorySelect>\r\n      )}\r\n      {products.length > 0 && (\r\n        <SearchKeyword\r\n          searchKeyword={searchKeyword}\r\n          setSearch={setSearch}\r\n          products={products}\r\n          setProducts={setProducts}\r\n        ></SearchKeyword>\r\n      )}\r\n      <div className=\"price-range\">\r\n        <SliderFilterPrice\r\n          priceRange={priceRange}\r\n          setPriceRange={setPriceRange}\r\n          products={products}\r\n        ></SliderFilterPrice>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  categories: PropTypes.arrayOf(PropTypes.string),\r\n  selectedCategory: PropTypes.string,\r\n  setSelectedCategory: PropTypes.func,\r\n};\r\n/* need to add proptypes of products*/\r\n\r\nexport default Header;\r\n\r\n/*      return (\r\n        <div>\r\n          <h1> App</h1>\r\n          <SaleCountdown\r\n            secondsLeft={secondsLeft}\r\n            setSecondsLeft={setSecondsLeft}\r\n            isSale={isSale}\r\n            setSale={setSale}\r\n          ></SaleCountdown>\r\n          {products.length > 0 && (\r\n            <CategorySelect\r\n              selectedCategory={selectedCategory}\r\n              setSelectedCategory={setSelectedCategory}\r\n              products={products}\r\n            ></CategorySelect>\r\n            <SliderFilterPrice priceRange={priceRange}></SliderFilterPrice}\r\n          )}\r\n        </div>\r\n      );\r\n      */\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\Products\\Products.js",["118"],"import React, { useEffect } from \"react\";\r\nimport ProductDisplayClass from \"../ProductDisplayClass/ProductDisplayClass\";\r\nimport \"./Products.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Products = (props) => {\r\n  const {\r\n    color,\r\n    secondsLeft,\r\n    salesProductsIds,\r\n    selectedCategory,\r\n    products,\r\n    isSale,\r\n    priceRange,\r\n  } = props;\r\n\r\n  /* the line\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    stops the warning\r\n    \"React Hook useEffect has a missing dependency: ''\"\r\n    where it expects to see [products] instead of []\r\n    */\r\n  useEffect(() => {\r\n    console.log(\"In Products, products are: \", products);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // maps the array containing the shop information to set up individual products items\r\n  // and passes via to the ProductsDisplayClass which will starts the sale countdown and which calls the  */\r\n\r\n  return (\r\n    <div>\r\n      {products.length > 0 && (\r\n        <div className=\"product-filter\">\r\n          {products.map((product) => (\r\n            <Link\r\n              className=\"product-card\"\r\n              to={`/products/${product._id}`}\r\n              key={product._id}\r\n            >\r\n              <ProductDisplayClass\r\n                color={color}\r\n                secondsLeft={secondsLeft}\r\n                salesProductsIds={salesProductsIds}\r\n                selectedCategory={selectedCategory}\r\n                title={product.title}\r\n                image={product.image}\r\n                price={product.price}\r\n                productid={product._id}\r\n                category={product.category}\r\n                isSale={product.onSale}\r\n                quantityInStock={product.quantityInStock}\r\n                priceRange={priceRange}\r\n                key={product._id}\r\n              ></ProductDisplayClass>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProducts.propTypes = {\r\n  selectedCategory: PropTypes.string,\r\n  categories: PropTypes.arrayOf(PropTypes.string),\r\n  secondsLeft: PropTypes.number,\r\n  salesProductsIds: PropTypes.arrayOf(PropTypes.number),\r\n};\r\n\r\n/* need propTypes for products and setProducts */\r\n\r\nexport default Products;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CategorySelect\\CategorySelect.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SaleCountdown\\SaleCountdown.js",["119"],"import React, { useEffect, useRef, useContext } from \"react\";\r\nimport \"./SaleCountdown.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\n/* this component is called by the Header component *\r\n\r\n/* counts down by seconds the time left until the end of the sale,\r\nand sets state of display message depending on whether the sale has finished */\r\n\r\nconst SaleCountdown = (props) => {\r\n  const { secondsLeft, setSecondsLeft, isSale, setSale } = props;\r\n  const [theme] = useContext(ThemeContext);\r\n\r\n  const convertToDHMS = () => {\r\n    let temp = \"\";\r\n    if (secondsLeft) {\r\n      temp = `\r\n      ${Math.floor(secondsLeft / (60 * 60 * 24))}:${Math.floor(\r\n        (secondsLeft / (60 * 60)) % 24\r\n      )}:`;\r\n      temp = `${temp}${Math.floor((secondsLeft / 60) % 60)}:${Math.floor(\r\n        secondsLeft % 60\r\n      )}`;\r\n      return temp;\r\n    }\r\n  };\r\n\r\n  /************************************ */\r\n  /* version using setTimeout.\r\n  /************************************ */\r\n  /*without the use of useRef, we could not use setInterval here, as it causes an infinite loop! \r\n  /* Each time the state of DHMSLeft is updated, useEffect sets a 1 second timeout.\r\n  At the end of the timeout, the state of the DHMSLeft and secondsLeft update, and so the useEffect runs again,\r\n  and sets another 1 second timeout.\r\n  If the secondsLeft reaches zero\r\n \r\n  useEffect(() => {\r\n    const countdown = setTimeout(() => {\r\n      if (secondsLeft) {\r\n        setSecondsLeft(secondsLeft - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(countdown);\r\n    */\r\n\r\n  /************************************ */\r\n  /* version using setInterval - needs to use useRef.\r\n  /************************************ */\r\n  const intervalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      if (secondsLeft) {\r\n        setSecondsLeft(secondsLeft - 1);\r\n        console.log(\"counting down, secs:\", secondsLeft);\r\n        setSale(\"true\");\r\n      } else {\r\n        setSale(\"false\");\r\n      }\r\n    }, 1000);\r\n\r\n    //use useRef to create a mutable ref object from the setTimeout identifier (\"countdown\").\r\n    // This lets the timeout id be accessible from the whole component.\r\n    // If we stored the id in a state variable, the component would be re-rendered\r\n    // after the state update so a new interval will be created, creating an infinite loop.\r\n    intervalRef.current = countdown;\r\n\r\n    /********************** */\r\n    /* EXPLANATION:          */\r\n    /********************** */\r\n    /* the intervalRef's current value is updated if starting a new countdown, \r\n    but the intervalRef itself stays fixed in the DOM and doesn't re-render when there's a change in \r\n    state of the secondsLeft variable\r\n    This how the infinite loop is prevented.\r\n    */\r\n\r\n    // Clear timeout if the component is unmounted\r\n    return () => clearTimeout(countdown);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [secondsLeft]);\r\n  //The return will runs each time useEffect finishes the timeout except for the first time\r\n  // and clears the timeout if the component is unmounted\r\n\r\n  const saleMessage = () => {\r\n    return secondsLeft\r\n      ? `10% off!! ${convertToDHMS(\r\n          secondsLeft\r\n        )} days left until the end of the Sale`\r\n      : \"Sale over\";\r\n  };\r\n\r\n  return (\r\n    <div style={{ color: theme.foreground, background: theme.background }}>\r\n      <h2 id=\"message\">{saleMessage()} </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nSaleCountdown.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  setSecondsLeft: PropTypes.func,\r\n};\r\n\r\nexport default SaleCountdown;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeThemeColors\\ChangeThemeColors.js",["120","121"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\nconst ChangeThemeColors = () => {\r\n  const [theme, toggleTheme] = useContext(ThemeContext);\r\n\r\n  return (\r\n    <button\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.foreground,\r\n      }}\r\n      onClick={toggleTheme}\r\n    >\r\n      {\" \"}\r\n      Change Theme{\" \"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ChangeThemeColors;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SliderFilterPrice\\SliderFilterPrice.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\SearchKeyword\\SearchKeyword.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ProductDisplayClass\\ProductDisplayClass.js",["122","123","124"],"import React, { useContext } from \"react\";\r\nimport \"./ProductDisplayClass.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport sale from \"./sale.png\";\r\n//import { Link } from \"react-router-dom\";\r\n//import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport ProductInfo from \"../../pages/ProductInfo/ProductInfo\";\r\nimport ThemeContext, { themes } from \"../../contexts/ThemeContexts\";\r\n\r\n/* this component is called from the Products class.\r\n   It renders individual products cards (product title, image, price).\r\n   If the product is a sale item, its title and sale price are colored until the sale ends \r\n   */\r\n\r\nconst ProductDisplayClass = (props) => {\r\n  const {\r\n    color,\r\n    secondsLeft,\r\n    salesProductsIds,\r\n    selectedCategory,\r\n    title,\r\n    image,\r\n    price,\r\n    productid,\r\n    category,\r\n    isSale,\r\n    quantityInStock,\r\n    priceRange,\r\n  } = props;\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const newPrice = salesProductsIds.includes(productid)\r\n    ? ` Sale: $ ${+(price * 0.9).toFixed(2)}`\r\n    : \"\";\r\n\r\n  /* renders an individual product card, containing product information and image.\r\n  the information an image are obtained from the props which are passed from the ProductsContainerClass */\r\n\r\n  return (\r\n    (!selectedCategory || category === selectedCategory) &&\r\n    price < priceRange[1] &&\r\n    price > priceRange[0] && (\r\n      <div\r\n        className=\"product-card\"\r\n        style={{ color: theme.foreground, background: \"white\" }}\r\n      >\r\n        <div className=\"product-info\">\r\n          {newPrice && isSale ? <img src={sale} alt=\"sale item\"></img> : null}\r\n          <h6\r\n            style={{\r\n              color: newPrice && isSale ? color : \"black\",\r\n            }}\r\n          >\r\n            {title}\r\n          </h6>\r\n        </div>\r\n        <div> product id is: {productid} </div>\r\n        <div className=\"product-image\">\r\n          <img src={image} alt={\"\"} />\r\n        </div>\r\n        <div className=\"product-info\">\r\n          <h5>$ {price}</h5>\r\n          <h5\r\n            style={{\r\n              color: color,\r\n              display: newPrice && secondsLeft ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            {newPrice}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nProductDisplayClass.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  color: PropTypes.string,\r\n  price: PropTypes.number,\r\n  selectedCategory: PropTypes.string,\r\n  title: PropTypes.string,\r\n  image: PropTypes.string,\r\n  salesProductsIds: PropTypes.arrayOf(PropTypes.number),\r\n  category: PropTypes.string,\r\n  quantityInStock: PropTypes.number,\r\n  isSale: PropTypes.bool,\r\n};\r\n\r\nexport default ProductDisplayClass;\r\n\r\n/*\r\nreturn (\r\n    (!selectedCategory || category === selectedCategory) && (\r\n      <div className=\"product-card\">\r\n        <Link to={`/ProductInfo/${productid}`}>\r\n          <ProductInfo\r\n            id={productid}\r\n            price={price}\r\n            image={image}\r\n            title={title}\r\n            isSale={secondsLeft}\r\n            newPrice={newPrice ? newPrice : \"\"}\r\n          />\r\n        </Link>\r\n        <div className=\"product-info\">\r\n          {newPrice && secondsLeft ? (\r\n            <img src={sale} alt=\"sale item\"></img>\r\n          ) : null}\r\n          <h6\r\n            style={{\r\n              color: newPrice && secondsLeft ? color : \"black\",\r\n            }}\r\n          >\r\n            {title}\r\n          </h6>\r\n        </div>\r\n        <div className=\"product-image\">\r\n          <img src={image} alt={\"\"} />\r\n        </div>\r\n        <div className=\"product-info\">\r\n          <h5>$ {price}</h5>\r\n          <h5\r\n            style={{\r\n              color: color,\r\n              display: newPrice && secondsLeft ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            {newPrice}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n  */\r\n\r\n/*\r\nimport { Link } from \"react-router-dom\";\r\nimport AddTodo from \"../../components/AddTodo/AddTodo\";\r\nimport Todo from \"../../components/Todo/Todo\";\r\n\r\nconst Home = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    // const check = useRef(\"Hello\");\r\n  \r\n    // let check = \"Hello\";\r\n    useEffect(() => {\r\n      fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n        .then((response) => response.json())\r\n        .then((data) => setTodos(data));\r\n    }, []);\r\n  \r\n    const addTodo = (title) => {\r\n      const newTodo = {\r\n        id: todos.length + 1,\r\n        title,\r\n        userId: 0,\r\n        completed: false,\r\n      };\r\n      setTodos([newTodo, ...todos]);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <AddTodo onAdd={addTodo} />\r\n        {todos.map((todo) => (\r\n          <Link to={`/todos/${todo.id}`} key={todo.id}>\r\n            <Todo id={todo.id} title={todo.title} />\r\n          </Link>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n  \r\n  */\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ListCategories\\ListCategories.js",["125"],"import React, { useEffect } from \"react\";\r\nimport \"./ListCategories.css\";\r\n//import PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\n/*reduce:\r\n *\r\n * array.reduce(function(total, currentValue, currentIndex, arr), initialValue)\r\n *\r\n * xs = name of array\r\n * (rv,x) => arrow fn passed to reduce\r\n * rv = The initialValue, or the previously returned value of the function\r\n *\r\n * The reduce() method reduces the array to a single value.\r\n * The reduce() method executes a provided function for each value of the array (from left-to-right).\r\n * The return value of the function is stored in an accumulator (result/total).\r\n * Note: reduce() does not execute the function for array elements without values.\r\n * Note: This method does not change the original array.\r\n *\r\n * Call this function with xs as the list of products and key as \"category\"\r\n */\r\n\r\nconst groupBy = (xs, key) =>\r\n  xs.reduce((rv, x) => {\r\n    rv[x[key]] = true || [];\r\n    return rv;\r\n  }, {});\r\n\r\nconst ListCategories = (props) => {\r\n  const { products } = props;\r\n\r\n  useEffect(() => {\r\n    console.log(\"In ListC, number of products from props: \", products.length);\r\n  }, [products]);\r\n\r\n  /*\r\n  if (products.length) {\r\n    console.log(\"listing categories\");\r\n    setCategories((products) => Object.keys(groupBy(products, \"category\")));\r\n\r\n    let anothervar = Object.keys(groupBy(products, \"category\"));\r\n\r\n    console.log(\"anothervar:\", anothervar);\r\n    this.setState({\r\n      categories: [\"Select...\", ...anothervar],\r\n    });\r\n    console.log(\"categories: \", categories);\r\n  } else {\r\n    console.log(\"products array empty\");\r\n  }\r\n*/\r\n  return (\r\n    <>\r\n      {Object.keys(groupBy(products, \"category\")).map((category) => (\r\n        <option value={category} key={category}>\r\n          {category}\r\n        </option>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n/*\r\nListCategories.propTypes = {\r\n\r\n};\r\n*/\r\nexport default ListCategories;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\contexts\\UserContexts.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\DisplayUser\\DisplayUser.js",["126","127","128","129","130"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\nimport ChangeUser from \"../ChangeUser/ChangeUser\";\r\n\r\nconst DisplayUser = () => {\r\n  const [user, toggleUser] = useContext(UserContext);\r\n  const [theme, toggleTheme] = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div>\r\n      <div>Logged in as: {user.name}</div>\r\n      <ChangeUser />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayUser;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\ChangeUser\\ChangeUser.js",["131","132","133"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\nconst ChangeUser = () => {\r\n  const { user, toggleUser } = useContext(UserContext);\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <button\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.foreground,\r\n      }}\r\n      onClick={toggleUser}\r\n    >\r\n      {user.name === \"Admin\" && <div>Login as Guest</div>}\r\n      {user.name === \"Guest\" && <div>Login as Admin</div>}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ChangeUser;\r\n","C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\CategorySelectAdmin\\CategorySelectAdmin.js",[],"C:\\dev\\coding\\30 server shop\\myShop\\client\\src\\components\\storagetools\\LocalStorageArrayTools.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":38,"nodeType":"140","messageId":"141","endLine":1,"endColumn":48},{"ruleId":"138","severity":1,"message":"142","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"143","line":4,"column":24,"nodeType":"140","messageId":"141","endLine":4,"endColumn":30},{"ruleId":"138","severity":1,"message":"144","line":27,"column":17,"nodeType":"140","messageId":"141","endLine":27,"endColumn":27},{"ruleId":"138","severity":1,"message":"145","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":12},{"ruleId":"138","severity":1,"message":"146","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":14},{"ruleId":"138","severity":1,"message":"147","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":16},{"ruleId":"138","severity":1,"message":"148","line":17,"column":10,"nodeType":"140","messageId":"141","endLine":17,"endColumn":15},{"ruleId":"138","severity":1,"message":"149","line":18,"column":10,"nodeType":"140","messageId":"141","endLine":18,"endColumn":21},{"ruleId":"138","severity":1,"message":"150","line":18,"column":23,"nodeType":"140","messageId":"141","endLine":18,"endColumn":37},{"ruleId":"138","severity":1,"message":"151","line":19,"column":10,"nodeType":"140","messageId":"141","endLine":19,"endColumn":26},{"ruleId":"138","severity":1,"message":"152","line":22,"column":10,"nodeType":"140","messageId":"141","endLine":22,"endColumn":16},{"ruleId":"138","severity":1,"message":"153","line":22,"column":18,"nodeType":"140","messageId":"141","endLine":22,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":27},{"ruleId":"138","severity":1,"message":"154","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":25},{"ruleId":"138","severity":1,"message":"155","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":20},{"ruleId":"138","severity":1,"message":"152","line":14,"column":5,"nodeType":"140","messageId":"141","endLine":14,"endColumn":11},{"ruleId":"138","severity":1,"message":"152","line":12,"column":40,"nodeType":"140","messageId":"141","endLine":12,"endColumn":46},{"ruleId":"138","severity":1,"message":"156","line":1,"column":29,"nodeType":"140","messageId":"141","endLine":1,"endColumn":37},{"ruleId":"138","severity":1,"message":"157","line":1,"column":39,"nodeType":"140","messageId":"141","endLine":1,"endColumn":48},{"ruleId":"138","severity":1,"message":"158","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":19},{"ruleId":"138","severity":1,"message":"143","line":8,"column":24,"nodeType":"140","messageId":"141","endLine":8,"endColumn":30},{"ruleId":"138","severity":1,"message":"159","line":27,"column":5,"nodeType":"140","messageId":"141","endLine":27,"endColumn":20},{"ruleId":"138","severity":1,"message":"155","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":20},{"ruleId":"138","severity":1,"message":"156","line":1,"column":29,"nodeType":"140","messageId":"141","endLine":1,"endColumn":37},{"ruleId":"138","severity":1,"message":"157","line":1,"column":39,"nodeType":"140","messageId":"141","endLine":1,"endColumn":48},{"ruleId":"138","severity":1,"message":"144","line":7,"column":16,"nodeType":"140","messageId":"141","endLine":7,"endColumn":26},{"ruleId":"138","severity":1,"message":"160","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":15},{"ruleId":"138","severity":1,"message":"161","line":8,"column":17,"nodeType":"140","messageId":"141","endLine":8,"endColumn":28},{"ruleId":"138","severity":1,"message":"156","line":1,"column":29,"nodeType":"140","messageId":"141","endLine":1,"endColumn":37},{"ruleId":"138","severity":1,"message":"157","line":1,"column":39,"nodeType":"140","messageId":"141","endLine":1,"endColumn":48},{"ruleId":"138","severity":1,"message":"161","line":7,"column":18,"nodeType":"140","messageId":"141","endLine":7,"endColumn":29},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'DisplayUser' is defined but never used.","'themes' is defined but never used.","'toggleUser' is assigned a value but never used.","'Link' is defined but never used.","'Header' is defined but never used.","'Products' is defined but never used.","'color' is assigned a value but never used.","'secondsLeft' is assigned a value but never used.","'setSecondsLeft' is assigned a value but never used.","'salesProductsIds' is assigned a value but never used.","'isSale' is assigned a value but never used.","'setSale' is assigned a value but never used.","'ChangeThemeColors' is defined but never used.","'ThemeContext' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ProductInfo' is defined but never used.","'quantityInStock' is assigned a value but never used.","'theme' is assigned a value but never used.","'toggleTheme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]